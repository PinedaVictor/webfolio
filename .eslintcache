[{"/Users/victorpineda/repos/webfolio/src/index.tsx":"1","/Users/victorpineda/repos/webfolio/src/reportWebVitals.ts":"2","/Users/victorpineda/repos/webfolio/src/App.tsx":"3","/Users/victorpineda/repos/webfolio/src/Pages/index.ts":"4","/Users/victorpineda/repos/webfolio/src/Config/index.ts":"5","/Users/victorpineda/repos/webfolio/src/Config/Firebase.ts":"6","/Users/victorpineda/repos/webfolio/src/Pages/AllProjects.tsx":"7","/Users/victorpineda/repos/webfolio/src/Pages/Home.tsx":"8","/Users/victorpineda/repos/webfolio/src/Components/ui/Layout.tsx":"9","/Users/victorpineda/repos/webfolio/src/Components/ui/ProjectCard.tsx":"10","/Users/victorpineda/repos/webfolio/src/Components/Parallax.tsx":"11","/Users/victorpineda/repos/webfolio/src/Data/projects/index.ts":"12","/Users/victorpineda/repos/webfolio/src/Components/sections/index.ts":"13","/Users/victorpineda/repos/webfolio/src/Components/sections/Footer.tsx":"14","/Users/victorpineda/repos/webfolio/src/Data/projects/UIS.ts":"15","/Users/victorpineda/repos/webfolio/src/Data/projects/research.ts":"16","/Users/victorpineda/repos/webfolio/src/Data/projects/UDSCar.ts":"17","/Users/victorpineda/repos/webfolio/src/Data/projects/happiibook.ts":"18","/Users/victorpineda/repos/webfolio/src/Data/projects/foodie.ts":"19","/Users/victorpineda/repos/webfolio/src/Data/projects/3DPrinterBuild.ts":"20","/Users/victorpineda/repos/webfolio/src/Components/sections/Contact.tsx":"21","/Users/victorpineda/repos/webfolio/src/Components/sections/Header.tsx":"22","/Users/victorpineda/repos/webfolio/src/Components/sections/Projects.tsx":"23","/Users/victorpineda/repos/webfolio/src/Components/sections/Dexterity.tsx":"24","/Users/victorpineda/repos/webfolio/src/Components/sections/Hero.tsx":"25","/Users/victorpineda/repos/webfolio/src/Assets/vectors/index.tsx":"26","/Users/victorpineda/repos/webfolio/src/Components/ui/Drawer.tsx":"27","/Users/victorpineda/repos/webfolio/src/Components/ResumeForm.tsx":"28","/Users/victorpineda/repos/webfolio/src/Components/ContactForm.tsx":"29","/Users/victorpineda/repos/webfolio/src/Assets/icons/index.tsx":"30"},{"size":500,"mtime":1608842390333,"results":"31","hashOfConfig":"32"},{"size":452,"mtime":1608842390334,"results":"33","hashOfConfig":"32"},{"size":562,"mtime":1612063311864,"results":"34","hashOfConfig":"32"},{"size":76,"mtime":1611973361853,"results":"35","hashOfConfig":"32"},{"size":28,"mtime":1611119791685,"results":"36","hashOfConfig":"32"},{"size":946,"mtime":1611309420470,"results":"37","hashOfConfig":"32"},{"size":1521,"mtime":1611973361852,"results":"38","hashOfConfig":"32"},{"size":464,"mtime":1612377876954,"results":"39","hashOfConfig":"32"},{"size":508,"mtime":1612377876953,"results":"40","hashOfConfig":"32"},{"size":6424,"mtime":1612377876953,"results":"41","hashOfConfig":"32"},{"size":1191,"mtime":1612377876949,"results":"42","hashOfConfig":"32"},{"size":236,"mtime":1611973361852,"results":"43","hashOfConfig":"32"},{"size":226,"mtime":1610856273434,"results":"44","hashOfConfig":"32"},{"size":566,"mtime":1612377876950,"results":"45","hashOfConfig":"32"},{"size":580,"mtime":1611973361851,"results":"46","hashOfConfig":"32"},{"size":576,"mtime":1611973361852,"results":"47","hashOfConfig":"32"},{"size":615,"mtime":1613029986708,"results":"48","hashOfConfig":"32"},{"size":946,"mtime":1612377876954,"results":"49","hashOfConfig":"32"},{"size":591,"mtime":1612377876953,"results":"50","hashOfConfig":"32"},{"size":445,"mtime":1611973361850,"results":"51","hashOfConfig":"32"},{"size":6340,"mtime":1612025897051,"results":"52","hashOfConfig":"32"},{"size":1041,"mtime":1610855768504,"results":"53","hashOfConfig":"32"},{"size":614,"mtime":1612377876951,"results":"54","hashOfConfig":"32"},{"size":3283,"mtime":1612025870807,"results":"55","hashOfConfig":"32"},{"size":4076,"mtime":1612377876951,"results":"56","hashOfConfig":"32"},{"size":649,"mtime":1610855768461,"results":"57","hashOfConfig":"32"},{"size":1367,"mtime":1609737775943,"results":"58","hashOfConfig":"32"},{"size":7030,"mtime":1612410914348,"results":"59","hashOfConfig":"32"},{"size":7580,"mtime":1612378398661,"results":"60","hashOfConfig":"32"},{"size":891,"mtime":1610855768466,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"hvkqt4",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/victorpineda/repos/webfolio/src/index.tsx",[],[],"/Users/victorpineda/repos/webfolio/src/reportWebVitals.ts",[],"/Users/victorpineda/repos/webfolio/src/App.tsx",[],"/Users/victorpineda/repos/webfolio/src/Pages/index.ts",[],"/Users/victorpineda/repos/webfolio/src/Config/index.ts",[],"/Users/victorpineda/repos/webfolio/src/Config/Firebase.ts",[],"/Users/victorpineda/repos/webfolio/src/Pages/AllProjects.tsx",[],"/Users/victorpineda/repos/webfolio/src/Pages/Home.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/ui/Layout.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/ui/ProjectCard.tsx",["127"],"import React, { useState } from \"react\";\nimport \"../../Styles/components/projectCard.scss\";\nimport { Col, Button } from \"react-bootstrap\";\nimport { useTransition, animated } from \"react-spring\";\nimport { IoMdArrowRoundUp, IoMdClose } from \"react-icons/io\";\nimport { Code, TechStack } from \"../../Assets/vectors\";\nimport { IconType } from \"react-icons\";\n\ntype FrameworkIcon = { icon: IconType; Framework: string };\ninterface ProjectCardProps {\n  data: any;\n}\n\nexport const ProjectCard: React.FC<ProjectCardProps> = (\n  props: ProjectCardProps\n) => {\n  const [projectTechStack, toggleTechStack] = useState(false);\n  const [projectDetails, toggleDetails] = useState(false);\n\n  const transition = useTransition(projectTechStack, null, {\n    config: {\n      duration: 450,\n    },\n    from: {\n      transform: \"translate3d(0, 0rem, 0)\",\n      opacity: 0,\n      width: \"100%\",\n      backgroundColor: \"red\",\n      height: \"35rem\",\n      position: \"absolute\",\n      left: \"0\",\n      overflow: \"hidden\",\n    },\n    enter: {\n      transform: \"translate3d(0, -35rem, 0)\",\n      opacity: 1,\n    },\n    leave: { transform: \"translate3d(0, 35rem, 0)\", opacity: 0 },\n  });\n\n  const transitionDetails = useTransition(projectDetails, null, {\n    config: {\n      duration: 450,\n    },\n    from: {\n      transform: \"translate3d(0, 0rem, 0)\",\n      opacity: 0,\n      width: \"100%\",\n      backgroundColor: \"#000d2a\",\n      height: \"35rem\",\n      position: \"absolute\",\n      left: \"0\",\n      overflow: \"hidden\",\n    },\n    enter: {\n      transform: \"translate3d(0, -35rem, 0)\",\n      opacity: 1,\n    },\n    leave: { transform: \"translate3d(0, 35rem, 0)\", opacity: 0 },\n  });\n\n  const ProjectDisplay = () => {\n    return (\n      <div\n        id=\"projectDisplayWrapper\"\n        style={{\n          backgroundImage: `url(${props.data.backgroundImg})`,\n        }}\n      >\n        {/* <div id=\"projectDisplayHeaderWrapper\"> */}\n        <h1 id=\"projectDisplayHeader\">{props.data.type}</h1>\n        {/* </div> */}\n      </div>\n    );\n  };\n\n  const ProjectDetails = () => {\n    return (\n      <div>\n        <div>\n          {props.data.cruces.map((crux: string, index: number) => (\n            <div key={index} style={{ marginTop: \"25px\" }}>\n              <ul style={{ color: \"white\" }}>\n                <li style={{ backgroundColor: \"\" }}>\n                  <p className=\"displayCrux\">{crux}</p>\n                </li>\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const ProjectContent = () => {\n    return (\n      <div id=\"projectContentWrapper\">\n        <div id=\"techStackIconWrapper\">\n          <TechStack id=\"techStackIcon\" />\n        </div>\n        <div id=\"codeVectorWrapper\">\n          <Code />\n        </div>\n        {props.data.icons.map((Icon: FrameworkIcon, index: number) => (\n          <div\n            className=\"frameworkWrapper\"\n            key={index}\n            style={{\n              top: `${(0 + index) * 20}%`,\n              paddingRight: `${100 / (index + 1 * 2)}%`,\n            }}\n          >\n            <Icon.icon className=\"frameworkIcon\" size=\"3rem\" />\n            <p className=\"frameworkTitle\">{Icon.Framework}</p>\n          </div>\n        ))}\n      </div>\n    );\n  };\n  return (\n    <Col className=\"projectCardWrapper\" xs={12} sm={12} md={6}>\n      <ProjectDisplay />\n      {transition.map(\n        ({ item, key, props }) =>\n          item && (\n            <Col key={key} sm={12}>\n              <animated.div key={key} style={props}>\n                <ProjectContent />\n              </animated.div>\n            </Col>\n          )\n      )}\n      {projectTechStack && (\n        <div>\n          {transitionDetails.map(\n            ({ item, key, props }) =>\n              item && (\n                <Col key={key} sm={12}>\n                  <animated.div key={key} style={props}>\n                    <ProjectDetails />\n                  </animated.div>\n                </Col>\n              )\n          )}\n        </div>\n      )}\n      <div>\n        <Button\n          id=\"techStackOpenButton\"\n          style={{ width: projectTechStack ? \"2.7rem\" : \"10rem\" }}\n          onClick={() => {\n            toggleTechStack(!projectTechStack);\n            toggleDetails(false);\n          }}\n        >\n          {!projectTechStack && (\n            <p\n              style={{\n                // marginTop: \"12px\",\n                margin: \"auto\",\n                fontWeight: \"bold\",\n                letterSpacing: \"1.7px\",\n                fontSize: \"16px\",\n                marginRight: \"3px\",\n                fontFamily: \"Arial\",\n              }}\n            >\n              Tech Stack\n            </p>\n          )}\n          <div\n            style={{\n              width: \"2rem\",\n              height: \"2rem\",\n            }}\n          >\n            {projectTechStack ? (\n              <IoMdClose size=\"2rem\" />\n            ) : (\n              <IoMdArrowRoundUp size=\"2rem\" />\n            )}\n          </div>\n        </Button>\n        {projectTechStack && (\n          <div>\n            <Button\n              // id=\"techStackOpenButton\"\n              style={{\n                position: \"absolute\",\n                right: \"4rem\",\n                bottom: \"0rem\",\n                margin: \"10px\",\n                borderRadius: \"20px\",\n                height: \"2.7rem\",\n                backgroundColor: \"black\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                border: \"2.5px solid\",\n                borderColor: \"white\",\n              }}\n              onClick={() => toggleDetails(!projectDetails)}\n            >\n              <p\n                style={{\n                  // marginTop: \"12px\",\n                  margin: \"auto\",\n                  fontWeight: \"bold\",\n                  letterSpacing: \"1.7px\",\n                  fontSize: \"16px\",\n                  marginRight: \"3px\",\n                  fontFamily: \"Arial\",\n                }}\n              >\n                Details\n              </p>\n              <div\n                style={{\n                  width: \"2rem\",\n                  height: \"2rem\",\n                }}\n              >\n                {projectDetails ? (\n                  <IoMdClose size=\"2rem\" />\n                ) : (\n                  <IoMdArrowRoundUp size=\"2rem\" />\n                )}\n              </div>\n            </Button>\n          </div>\n        )}\n      </div>\n    </Col>\n  );\n};\n","/Users/victorpineda/repos/webfolio/src/Components/Parallax.tsx",[],"/Users/victorpineda/repos/webfolio/src/Data/projects/index.ts",[],"/Users/victorpineda/repos/webfolio/src/Components/sections/index.ts",[],"/Users/victorpineda/repos/webfolio/src/Components/sections/Footer.tsx",[],"/Users/victorpineda/repos/webfolio/src/Data/projects/UIS.ts",[],"/Users/victorpineda/repos/webfolio/src/Data/projects/research.ts",[],"/Users/victorpineda/repos/webfolio/src/Data/projects/UDSCar.ts",["128"],"/Users/victorpineda/repos/webfolio/src/Data/projects/happiibook.ts",[],"/Users/victorpineda/repos/webfolio/src/Data/projects/foodie.ts",[],"/Users/victorpineda/repos/webfolio/src/Data/projects/3DPrinterBuild.ts",["129"],"import img from \"../../Assets/images/2.jpg\";\nimport { IoLogoFirebase } from \"react-icons/io5\";\nimport { MdBuild } from \"react-icons/md\";\nimport { SiArduino } from \"react-icons/si\";\n\nexport const ThreeDPrinterBuild = {\n  title: \"3D Printer build\",\n  type: \"3D Printer\",\n  icons: [\n    { icon: MdBuild, Framework: \"DIY build kit\" },\n    { icon: SiArduino, Framework: \"Arduino Mega\" },\n  ],\n  backgroundImg: img,\n  cruces: [\"Built 3D Printer\"],\n};\n","/Users/victorpineda/repos/webfolio/src/Components/sections/Contact.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/sections/Header.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/sections/Projects.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/sections/Dexterity.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/sections/Hero.tsx",[],"/Users/victorpineda/repos/webfolio/src/Assets/vectors/index.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/ui/Drawer.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/ResumeForm.tsx",["130"],"import React, { useState } from \"react\";\nimport \"../Styles/components/contactForm.scss\";\nimport { Form, Col, Button, Spinner } from \"react-bootstrap\";\nimport { animated, useTransition } from \"react-spring\";\nimport { IoMdClose, IoMdCheckmark } from \"react-icons/io\";\nimport firebase from \"firebase/app\";\nimport \"firebase/functions\";\n\ninterface ResumeFormFields {\n  name: string;\n  email: string;\n}\n\ninterface ResumeFormProps {\n  toggleForm: () => void;\n}\nexport const ResumeForm: React.FC<ResumeFormProps> = (props) => {\n  const [formFields, setFormFields] = useState<ResumeFormFields>({\n    name: \"\",\n    email: \"\",\n  });\n  const [sendingEmail, setSendingEmail] = useState(false);\n  const [emailSent, setEmailSent] = useState(false);\n  const [emailFailed, setEmailFailed] = useState(false);\n\n  const submitResumeForm = (event: React.FormEvent<HTMLFormElement>) => {\n    setSendingEmail(true);\n    event.preventDefault();\n    const sendEmail = firebase.functions().httpsCallable(\"sendResume\");\n    sendEmail(formFields)\n      .then(() => {\n        setFormFields({ name: \"\", email: \"\" });\n        setSendingEmail(false);\n        setEmailSent(true);\n        setTimeout(() => {\n          setEmailSent(false);\n        }, 1700);\n      })\n      .catch(() => {\n        setEmailFailed(true);\n        setTimeout(() => {\n          setSendingEmail(false);\n        }, 1700);\n      });\n  };\n  //   FIXME: React.ChangeEvent<FormControlElement>\n  const handleInputChange = (event: any) => {\n    event.preventDefault();\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormFields((prevState) => {\n      const data = Object.assign({}, prevState);\n      const newData = Object.assign(data, { ...data, [name]: value });\n      return newData;\n    });\n    console.log;\n  };\n\n  const emailSendingStatusTransition = useTransition(sendingEmail, null, {\n    config: {\n      duration: 450,\n    },\n    from: {\n      opacity: 0,\n      width: \"100%\",\n      backgroundColor: \"rgba(0,0,0,0.9)\",\n      height: \"30rem\",\n      position: \"absolute\",\n      left: \"0\",\n      top: \"-25rem\",\n      overflow: \"hidden\",\n      borderRadius: \"25px\",\n      boxShadow: \"10px 10px 20px black, -10px 10px 20px black\",\n    },\n    enter: {\n      opacity: 50,\n    },\n    leave: { opacity: 0 },\n  });\n\n  const emailSentTransition = useTransition(emailSent, null, {\n    config: {\n      duration: 450,\n    },\n    from: {\n      opacity: 0,\n      width: \"100%\",\n      backgroundColor: \"rgba(0,0,0,0.9)\",\n      height: \"30rem\",\n      position: \"absolute\",\n      left: \"0\",\n      top: \"-25rem\",\n      overflow: \"hidden\",\n      borderRadius: \"25px\",\n      boxShadow: \"10px 10px 20px black, -10px 10px 20px black\",\n    },\n    enter: {\n      opacity: 50,\n    },\n    leave: { opacity: 0 },\n  });\n\n  return (\n    <Col className=\"colWrapper\" xs={12} sm={12} md={12} lg={12} xl={12}>\n      <div>\n        <Button id=\"exitButton\" onClick={props.toggleForm}>\n          <IoMdClose size=\"2rem\" style={{ marginLeft: \"-5px\" }} />\n        </Button>\n      </div>\n      <p style={{ color: \"white\" }}>\n        {\"Enter your email and my resume will be sent\"}\n      </p>\n      <Form\n        onSubmit={submitResumeForm}\n        style={{\n          maxWidth: \"35rem\",\n          margin: \"auto\",\n          marginTop: \"55px\",\n        }}\n      >\n        <Form.Group controlId=\"name\">\n          <Form.Control\n            type=\"name\"\n            name=\"name\"\n            placeholder=\"Name\"\n            onChange={(e) => handleInputChange(e)}\n            value={formFields.name}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Text className=\"formEmailPolicy\">\n            {\"Your email will NOT be shared with anyone else.\"}\n          </Form.Text>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={(e) => handleInputChange(e)}\n            value={formFields.email}\n          />\n        </Form.Group>\n\n        <Button className=\"submitButton\" variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n      {emailSendingStatusTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <Col key={key} sm={12}>\n              <animated.div key={key} style={props}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                    justifyContent: \"center\",\n                    marginTop: \"10rem\",\n                  }}\n                >\n                  {!emailFailed ? (\n                    <p\n                      style={{\n                        fontSize: \"4rem\",\n                        width: \"100%\",\n                        textAlign: \"center\",\n                        fontFamily: \"San Francisco Text\",\n                        color: \"white\",\n                      }}\n                    >\n                      Sending\n                    </p>\n                  ) : (\n                    <p\n                      style={{\n                        fontSize: \"3rem\",\n                        width: \"100%\",\n                        textAlign: \"center\",\n                        fontFamily: \"San Francisco Text\",\n                        color: \"white\",\n                      }}\n                    >\n                      Error sending email\n                    </p>\n                  )}\n                  <Spinner\n                    animation=\"grow\"\n                    style={{\n                      width: \"5rem\",\n                      height: \"5rem\",\n                      color: !emailFailed ? \"#00c5d4\" : \"red\",\n                    }}\n                  />\n                </div>\n              </animated.div>\n            </Col>\n          )\n      )}\n      {emailSentTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <Col key={key} sm={12}>\n              <animated.div key={key} style={props}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                    justifyContent: \"center\",\n                    marginTop: \"10rem\",\n                  }}\n                >\n                  <p\n                    style={{\n                      fontSize: \"3rem\",\n                      width: \"100%\",\n                      textAlign: \"center\",\n                      fontFamily: \"San Francisco Text\",\n                      color: \"white\",\n                    }}\n                  >\n                    Email Sent\n                  </p>\n                  <IoMdCheckmark\n                    size=\"5rem\"\n                    color=\"white\"\n                    style={{\n                      borderRadius: \"50%\",\n                      backgroundColor: \"#00c5d4\",\n                      padding: \"7px\",\n                    }}\n                  />\n                </div>\n              </animated.div>\n            </Col>\n          )\n      )}\n    </Col>\n  );\n};\n","/Users/victorpineda/repos/webfolio/src/Components/ContactForm.tsx",["131","132"],"import React, { useState } from \"react\";\nimport \"../Styles/components/contactForm.scss\";\nimport { animated, useTransition } from \"react-spring\";\nimport { Button, Form, Col, Spinner } from \"react-bootstrap\";\nimport { IoMdClose, IoMdCheckmark } from \"react-icons/io\";\nimport firebase from \"firebase/app\";\nimport \"firebase/functions\";\n\ninterface ContactFormFields {\n  name: string;\n  email: string;\n  subject: string;\n  message: string;\n}\n\ninterface ContactProps {\n  toggleForm: () => void;\n}\n\nexport const ContactForm: React.FC<ContactProps> = (props) => {\n  const [contactFormFields, setFormFields] = useState<ContactFormFields>({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  });\n\n  const [sendingEmail, setSendingEmail] = useState(false);\n  const [emailSent, setEmailSent] = useState(false);\n  const [emailFailed, setEmailFailed] = useState(false);\n  // FIXME: Use types and use state objects\n  // React.FormEvent<HTMLFormElement>\n  // SyntheticBaseEvent\n  const submitContactForm = (event: React.FormEvent<HTMLFormElement>) => {\n    setSendingEmail(true);\n    event.preventDefault();\n    const sendEmails = firebase.functions().httpsCallable(\"contact\");\n    console.log(\"Got the email VAR\");\n    sendEmails(contactFormFields)\n      .then(() => {\n        setFormFields({ name: \"\", email: \"\", subject: \"\", message: \"\" });\n        setSendingEmail(false);\n        setEmailSent(true);\n        setTimeout(() => {\n          setEmailSent(false);\n        }, 1700);\n      })\n      .catch((error) => {\n        setEmailFailed(true);\n        setTimeout(() => {\n          setSendingEmail(false);\n        }, 1700);\n      });\n  };\n\n  const handleInputChange = (event: any) => {\n    event.preventDefault();\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormFields((prevState) => {\n      const data = Object.assign({}, prevState);\n      const newData = Object.assign(data, { ...data, [name]: value });\n      return newData;\n    });\n  };\n\n  const emailSendingStatusTransition = useTransition(sendingEmail, null, {\n    config: {\n      duration: 450,\n    },\n    from: {\n      opacity: 0,\n      width: \"100%\",\n      backgroundColor: \"rgba(0,0,0,0.9)\",\n      height: \"30rem\",\n      position: \"absolute\",\n      left: \"0\",\n      top: \"-25rem\",\n      overflow: \"hidden\",\n      borderRadius: \"25px\",\n      boxShadow: \"10px 10px 20px black, -10px 10px 20px black\",\n    },\n    enter: {\n      opacity: 50,\n    },\n    leave: { opacity: 0 },\n  });\n\n  const emailSentTransition = useTransition(emailSent, null, {\n    config: {\n      duration: 450,\n    },\n    from: {\n      opacity: 0,\n      width: \"100%\",\n      backgroundColor: \"rgba(0,0,0,0.9)\",\n      height: \"30rem\",\n      position: \"absolute\",\n      left: \"0\",\n      top: \"-25rem\",\n      overflow: \"hidden\",\n      borderRadius: \"25px\",\n      boxShadow: \"10px 10px 20px black, -10px 10px 20px black\",\n    },\n    enter: {\n      opacity: 50,\n    },\n    leave: { opacity: 0 },\n  });\n\n  return (\n    <Col className=\"colWrapper\" xs={12} sm={12} md={12} lg={12} xl={12}>\n      <Button id=\"exitButton\" onClick={props.toggleForm}>\n        <IoMdClose size=\"2rem\" style={{ marginLeft: \"-5px\" }} />\n      </Button>\n      <Form className=\"contactForm\" onSubmit={submitContactForm}>\n        <Form.Group controlId=\"name\">\n          <Form.Control\n            onChange={(e) => handleInputChange(e)}\n            type=\"name\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={contactFormFields.name}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"email\">\n          <Form.Text className=\"formEmailPolicy\">\n            {\"Your email will NOT be shared with anyone else.\"}\n          </Form.Text>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            onChange={(e) => handleInputChange(e)}\n            placeholder=\"Email\"\n            value={contactFormFields.email}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"subject\">\n          <Form.Control\n            type=\"subject\"\n            name=\"subject\"\n            placeholder=\"Subject\"\n            value={contactFormFields.subject}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"message\">\n          <Form.Control\n            as=\"textarea\"\n            name=\"message\"\n            rows={3}\n            placeholder=\"Message\"\n            value={contactFormFields.message}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Group>\n        <Button className=\"submitButton\" variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n      {emailSendingStatusTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <Col key={key} sm={12}>\n              <animated.div key={key} style={props}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                    justifyContent: \"center\",\n                    marginTop: \"10rem\",\n                  }}\n                >\n                  {!emailFailed ? (\n                    <p\n                      style={{\n                        fontSize: \"4rem\",\n                        width: \"100%\",\n                        textAlign: \"center\",\n                        fontFamily: \"San Francisco Text\",\n                        color: \"white\",\n                      }}\n                    >\n                      Sending\n                    </p>\n                  ) : (\n                    <p\n                      style={{\n                        fontSize: \"3rem\",\n                        width: \"100%\",\n                        textAlign: \"center\",\n                        fontFamily: \"San Francisco Text\",\n                        color: \"white\",\n                      }}\n                    >\n                      Error sending email\n                    </p>\n                  )}\n                  <Spinner\n                    animation=\"grow\"\n                    style={{\n                      width: \"5rem\",\n                      height: \"5rem\",\n                      color: !emailFailed ? \"#00c5d4\" : \"red\",\n                    }}\n                  />\n                </div>\n              </animated.div>\n            </Col>\n          )\n      )}\n      {emailSentTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <Col key={key} sm={12}>\n              <animated.div key={key} style={props}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                    justifyContent: \"center\",\n                    marginTop: \"10rem\",\n                  }}\n                >\n                  <p\n                    style={{\n                      fontSize: \"3rem\",\n                      width: \"100%\",\n                      textAlign: \"center\",\n                      fontFamily: \"San Francisco Text\",\n                      color: \"white\",\n                    }}\n                  >\n                    Email Sent\n                  </p>\n                  <IoMdCheckmark\n                    size=\"5rem\"\n                    color=\"white\"\n                    style={{\n                      borderRadius: \"50%\",\n                      backgroundColor: \"#00c5d4\",\n                      padding: \"7px\",\n                    }}\n                  />\n                </div>\n              </animated.div>\n            </Col>\n          )\n      )}\n    </Col>\n  );\n};\n","/Users/victorpineda/repos/webfolio/src/Assets/icons/index.tsx",[],{"ruleId":"133","severity":1,"message":"134","line":11,"column":9,"nodeType":"135","messageId":"136","endLine":11,"endColumn":12,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":24},{"ruleId":"133","severity":1,"message":"134","line":47,"column":37,"nodeType":"135","messageId":"136","endLine":47,"endColumn":40,"suggestions":"142"},{"ruleId":"138","severity":1,"message":"143","line":48,"column":15,"nodeType":"140","messageId":"141","endLine":48,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":56,"column":37,"nodeType":"135","messageId":"136","endLine":56,"endColumn":40,"suggestions":"144"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["145","146"],"@typescript-eslint/no-unused-vars","'IoLogoFirebase' is defined but never used.","Identifier","unusedVar",["147","148"],"'error' is defined but never used.",["149","150"],{"messageId":"151","fix":"152","desc":"153"},{"messageId":"154","fix":"155","desc":"156"},{"messageId":"151","fix":"157","desc":"153"},{"messageId":"154","fix":"158","desc":"156"},{"messageId":"151","fix":"159","desc":"153"},{"messageId":"154","fix":"160","desc":"156"},"suggestUnknown",{"range":"161","text":"162"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"161","text":"163"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"164","text":"162"},{"range":"164","text":"163"},{"range":"165","text":"162"},{"range":"165","text":"163"},[451,454],"unknown","never",[1465,1468],[1673,1676]]
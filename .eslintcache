[{"/Users/victorpineda/repos/webfolio/src/index.tsx":"1","/Users/victorpineda/repos/webfolio/src/reportWebVitals.ts":"2","/Users/victorpineda/repos/webfolio/src/App.tsx":"3","/Users/victorpineda/repos/webfolio/src/Pages/Home.tsx":"4","/Users/victorpineda/repos/webfolio/src/Components/ui/Layout.tsx":"5","/Users/victorpineda/repos/webfolio/src/Components/sections/index.ts":"6","/Users/victorpineda/repos/webfolio/src/Components/sections/Header.tsx":"7","/Users/victorpineda/repos/webfolio/src/Components/sections/Hero.tsx":"8","/Users/victorpineda/repos/webfolio/src/Components/sections/Projects.tsx":"9","/Users/victorpineda/repos/webfolio/src/Components/sections/Dexterity.tsx":"10","/Users/victorpineda/repos/webfolio/src/Components/ui/Drawer.tsx":"11","/Users/victorpineda/repos/webfolio/src/Components/ui/ProjectCard.tsx":"12","/Users/victorpineda/repos/webfolio/src/Data/projects/index.ts":"13","/Users/victorpineda/repos/webfolio/src/Data/projects/foodie.ts":"14","/Users/victorpineda/repos/webfolio/src/Data/projects/happiibook.ts":"15","/Users/victorpineda/repos/webfolio/src/Assets/vectors/index.tsx":"16","/Users/victorpineda/repos/webfolio/src/Data/projects/research.ts":"17","/Users/victorpineda/repos/webfolio/src/Data/projects/UIS.ts":"18","/Users/victorpineda/repos/webfolio/src/Assets/icons/index.tsx":"19","/Users/victorpineda/repos/webfolio/src/Components/sections/Contact.tsx":"20","/Users/victorpineda/repos/webfolio/src/Components/Parallax.tsx":"21"},{"size":500,"mtime":1608842390333,"results":"22","hashOfConfig":"23"},{"size":452,"mtime":1608842390334,"results":"24","hashOfConfig":"23"},{"size":192,"mtime":1608842390317,"results":"25","hashOfConfig":"23"},{"size":1265,"mtime":1609865007975,"results":"26","hashOfConfig":"23"},{"size":324,"mtime":1608842390331,"results":"27","hashOfConfig":"23"},{"size":191,"mtime":1609722609013,"results":"28","hashOfConfig":"23"},{"size":871,"mtime":1609586296152,"results":"29","hashOfConfig":"23"},{"size":5142,"mtime":1609865882663,"results":"30","hashOfConfig":"23"},{"size":630,"mtime":1609865864374,"results":"31","hashOfConfig":"23"},{"size":3858,"mtime":1609865864374,"results":"32","hashOfConfig":"23"},{"size":1367,"mtime":1609737775943,"results":"33","hashOfConfig":"23"},{"size":4957,"mtime":1609585728378,"results":"34","hashOfConfig":"23"},{"size":146,"mtime":1608861476897,"results":"35","hashOfConfig":"23"},{"size":758,"mtime":1609321299529,"results":"36","hashOfConfig":"23"},{"size":775,"mtime":1608861618119,"results":"37","hashOfConfig":"23"},{"size":425,"mtime":1609405669942,"results":"38","hashOfConfig":"23"},{"size":573,"mtime":1608861609343,"results":"39","hashOfConfig":"23"},{"size":476,"mtime":1608860956932,"results":"40","hashOfConfig":"23"},{"size":683,"mtime":1609109539206,"results":"41","hashOfConfig":"23"},{"size":6992,"mtime":1609865864374,"results":"42","hashOfConfig":"23"},{"size":1230,"mtime":1609865007974,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"hvkqt4",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/victorpineda/repos/webfolio/src/index.tsx",[],[],"/Users/victorpineda/repos/webfolio/src/reportWebVitals.ts",[],"/Users/victorpineda/repos/webfolio/src/App.tsx",[],"/Users/victorpineda/repos/webfolio/src/Pages/Home.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/ui/Layout.tsx",["91"],"import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Header } from \"../sections/Header\";\nexport const Layout: React.FC = (props: any) => {\n  return (\n    <Container fluid style={{ backgroundColor: \"\", margin: \"0\", padding: \"0\" }}>\n      <Header />\n      {props.children}\n    </Container>\n  );\n};\n","/Users/victorpineda/repos/webfolio/src/Components/sections/index.ts",[],"/Users/victorpineda/repos/webfolio/src/Components/sections/Header.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/sections/Hero.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/sections/Projects.tsx",["92","93","94"],"import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { ProjectCard } from \"../ui/ProjectCard\";\nimport { happiibook, Foodie, UIS, Research } from \"../../Data/projects\";\n\nexport const FeaturedProjects: React.FC = () => {\n  const FeaturedProjects = [Foodie, Foodie, Foodie, Foodie];\n\n  return (\n    <Container\n      fluid\n      style={{\n        margin: \"0\",\n        padding: \"0\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n      }}\n    >\n      {FeaturedProjects.map((item, index) => (\n        <ProjectCard key={index} data={item} />\n      ))}\n    </Container>\n  );\n};\n","/Users/victorpineda/repos/webfolio/src/Components/sections/Dexterity.tsx",["95"],"/Users/victorpineda/repos/webfolio/src/Components/ui/Drawer.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/ui/ProjectCard.tsx",["96","97","98","99","100","101"],"import React, { useState } from \"react\";\nimport { Col, Button } from \"react-bootstrap\";\nimport { useTransition, animated } from \"react-spring\";\nimport { IoMdArrowRoundUp, IoMdClose } from \"react-icons/io\";\nimport { Code, TechStack } from \"../../Assets/vectors\";\n\ninterface ProjectCardProps {\n  data: any;\n}\n\nexport const ProjectCard: React.FC<ProjectCardProps> = (\n  props: ProjectCardProps\n) => {\n  const [info, toggle] = useState(false);\n\n  let projectData: any = {};\n  const project = props.data.map((data: any) => (projectData = data));\n  // console.log(\"Project Data:::\", project);\n\n  const transition = useTransition(info, null, {\n    config: {\n      duration: 450,\n    },\n    from: {\n      transform: \"translate3d(0, 0em, 0)\",\n      opacity: 0,\n      width: \"100%\",\n      backgroundColor: \"red\",\n      height: \"33rem\",\n      position: \"absolute\",\n      left: \"0\",\n      overflow: \"hidden\",\n    },\n    enter: {\n      transform: \"translate3d(0, -33em, 0)\",\n      opacity: 1,\n    },\n    leave: { transform: \"translate3d(0, 33rem, 0)\", opacity: 0 },\n  });\n\n  const ProjectDisplay = () => {\n    let gig = \"\";\n    props.data.map((item: any) => (gig = item.backgroundImg));\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          backgroundImage: `url(${gig})`,\n          backgroundSize: \"100vh 100%\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      >\n        <p\n          style={{\n            color: \"white\",\n            fontSize: \"120px\",\n            fontFamily: \"sans-serif\",\n            overflow: \"hidden\",\n            fontWeight: \"bold\",\n          }}\n        >\n          {projectData.type}\n        </p>\n      </div>\n    );\n  };\n\n  const ProjectContent = () => {\n    return (\n      <div\n        style={{\n          backgroundColor: \"black\",\n          height: \"100%\",\n        }}\n      >\n        <div\n          style={{\n            float: \"left\",\n            width: \"50%\",\n            height: \"100%\",\n            backgroundColor: \"#000d2a\",\n          }}\n        >\n          <TechStack\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              marginTop: \"2.5rem\",\n            }}\n          />\n        </div>\n        <div\n          style={{\n            marginLeft: \"50%\",\n            height: \"100vh\",\n            opacity: \"60%\",\n          }}\n        >\n          <Code />\n        </div>\n        {projectData.icons.map((Icon: any, index: number) => (\n          <div\n            key={index}\n            style={{\n              position: \"absolute\",\n              top: `${(0 + index) * 20}%`,\n              right: \"0\",\n              backgroundColor: \"black\",\n              padding: \"10px\",\n              paddingRight: `${100 / (index + 1 * 2)}%`,\n              borderTopLeftRadius: \"50px\",\n              borderBottomLeftRadius: \"50px\",\n              display: \"flex\",\n              boxShadow: \"-5px 2px 0px #004FFF\",\n            }}\n          >\n            <Icon.icon\n              size=\"3rem\"\n              style={{\n                fill: \"#000d2a\",\n                backgroundColor: \"#ff592e\",\n                borderRadius: \"50%\",\n                padding: \"5px\",\n                marginRight: \"10px\",\n              }}\n            />\n            <p\n              style={{\n                margin: \"auto\",\n                color: \"white\",\n                letterSpacing: \"1px\",\n              }}\n            >\n              {Icon.Framework}\n            </p>\n          </div>\n        ))}\n      </div>\n    );\n  };\n  return (\n    <Col\n      xs={12}\n      sm={12}\n      md={6}\n      style={{\n        backgroundColor: \"black\",\n        height: \"33rem\",\n        left: \"0\",\n        border: \"1px solid black\",\n        margin: \"0\",\n        padding: \"0\",\n        // zIndex: 1,\n      }}\n    >\n      <ProjectDisplay />\n      {transition.map(\n        ({ item, key, props }) =>\n          item && (\n            <Col key={key} sm={12}>\n              <animated.div key={key} style={props}>\n                <ProjectContent />\n              </animated.div>\n            </Col>\n          )\n      )}\n      <Button\n        style={{\n          position: \"absolute\",\n          right: \"0\",\n          bottom: \"0\",\n          // zIndex: 1,\n          margin: \"10px\",\n          borderRadius: \"50%\",\n          width: \"2.7rem\",\n          height: \"2.7rem\",\n          backgroundColor: \"black\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          border: \"2px solid\",\n          borderColor: \"white\",\n        }}\n        onClick={() => toggle(!info)}\n      >\n        <div\n          style={{\n            right: \"0\",\n            bottom: \"0\",\n            borderRadius: \"50%\",\n            width: \"2rem\",\n            height: \"2rem\",\n            display: \"flex\",\n          }}\n        >\n          {/* TODO: Animate icons to fade in and out */}\n          {info ? <IoMdClose size=\"2rem\" /> : <IoMdArrowRoundUp size=\"2rem\" />}\n        </div>\n      </Button>\n    </Col>\n  );\n};\n","/Users/victorpineda/repos/webfolio/src/Data/projects/index.ts",[],"/Users/victorpineda/repos/webfolio/src/Data/projects/foodie.ts",[],"/Users/victorpineda/repos/webfolio/src/Data/projects/happiibook.ts",[],"/Users/victorpineda/repos/webfolio/src/Assets/vectors/index.tsx",[],"/Users/victorpineda/repos/webfolio/src/Data/projects/research.ts",[],"/Users/victorpineda/repos/webfolio/src/Data/projects/UIS.ts",[],"/Users/victorpineda/repos/webfolio/src/Assets/icons/index.tsx",[],"/Users/victorpineda/repos/webfolio/src/Components/sections/Contact.tsx",["102"],"import React, { useState } from \"react\";\nimport \"../../Styles/main.scss\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { IoMdChatboxes } from \"react-icons/io\";\nimport { useTransition, animated } from \"react-spring\";\n\nexport const Contact: React.FC = () => {\n  const [form, toggleForm] = useState(false);\n\n  const transition = useTransition(form, null, {\n    config: {\n      duration: 450,\n    },\n    from: {\n      //   transform: \"translate3d(0, 0em, 0)\",\n      opacity: 0,\n      width: \"100%\",\n      backgroundColor: \"red\",\n      height: \"33rem\",\n      position: \"absolute\",\n      left: \"0\",\n      overflow: \"hidden\",\n    },\n    enter: {\n      //   transform: \"translate3d(0, -33em, 0)\",\n      opacity: 1,\n    },\n    leave: { opacity: 0 },\n  });\n\n  const ContactForm = () => {\n    return (\n      <div style={{}}>\n        <Form style={{ maxWidth: \"35rem\", margin: \"auto\", marginTop: \"15%\" }}>\n          <Form.Group controlId=\"name\">\n            <Form.Control type=\"name\" placeholder=\"Name\" />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Control type=\"email\" placeholder=\"Email\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Control type=\"subject\" placeholder=\"Subject\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Control as=\"textarea\" rows={3} placeholder=\"Message\" />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <Button onClick={() => toggleForm(!form)} />\n      </div>\n    );\n  };\n  return (\n    <Container\n      fluid\n      style={{\n        backgroundColor: \"black\",\n        // backgroundColor: \"#000d2a\",\n        marginBottom: \"30px\",\n        margin: \"0\",\n        padding: \"0\",\n        marginTop: \"33px\",\n        paddingBottom: \"55px\",\n      }}\n    >\n      <Row\n        style={{\n          // backgroundColor: \"red\",\n          marginLeft: \"2%\",\n          marginRight: \"2%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          margin: \"0\",\n          padding: \"0\",\n          width: \"100%\",\n        }}\n      >\n        {/* <IoMdChatboxes\n          size=\"35rem\"\n          style={{ fill: \"white\", paddingLeft: \"5%\" }}\n        />\n        <Button style={{ height: \"2rem\", width: \"6rem\" }}>Contact</Button> */}\n        <Col lg={1}></Col>\n        <Col\n          xs={12}\n          sm={12}\n          md={6}\n          lg={6}\n          xl={6}\n          style={\n            {\n              // backgroundColor: \"#0cce6b\",\n              // backgroundColor: \"#000d2a\",\n              // height: \"40rem\",\n              // maxHeight: \"35rem\",\n            }\n          }\n        >\n          <div>\n            {/* <IoMdChatboxes\n              size=\"35rem\"\n              style={{\n                // backgroundColor: \"green\",\n                // maxHeight: \"100%\",\n                maxWidth: \"100%\",\n                fill: \"white\",\n              }}\n            /> */}\n            <p\n              style={{\n                fontSize: \"5rem\",\n                overflowWrap: \"break-word\",\n                // padding: \"50px\",\n                margin: \"0\",\n                lineHeight: \"5rem\",\n                color: \"white\",\n              }}\n            >\n              {\n                \"Hi, My name is Victor and I'm a software developer. Feel free to contact me.\"\n              }\n            </p>\n            <div\n              className=\"contactButton\"\n              style={{\n                height: \"10px\",\n                marginTop: \"5px\",\n                // marginBottom: \"5px\",\n                borderRadius: \"20px\",\n                width: \"25%\",\n                // float: \"right\",\n              }}\n            />\n            <div\n              className=\"contactButton\"\n              style={{\n                height: \"10px\",\n                marginTop: \"10px\",\n                marginBottom: \"5px\",\n                borderRadius: \"20px\",\n                width: \"50%\",\n                // float: \"right\",\n              }}\n            />\n            <div\n              className=\"contactButton\"\n              style={{\n                height: \"10px\",\n                marginTop: \"10px\",\n                marginBottom: \"5px\",\n                borderRadius: \"20px\",\n                // float: \"right\",\n                width: \"75%\",\n              }}\n            />\n            <div\n              className=\"contactButton\"\n              style={{\n                height: \"10px\",\n                marginTop: \"10px\",\n                marginBottom: \"5px\",\n                borderRadius: \"20px\",\n                // float: \"right\",\n                // width: \"75%\",\n              }}\n            />\n          </div>\n          {/* <Button\n            onClick={() => toggleForm(!form)}\n            style={{\n              height: \"10rem\",\n              width: \"10rem\",\n              borderRadius: \"50%\",\n              position: \"absolute\",\n              right: \"0\",\n              //   top: \"40%\",\n            }}\n          >\n            Contact\n          </Button> */}\n        </Col>\n        <Col\n          xs={12}\n          sm={12}\n          md={5}\n          lg={5}\n          xl={5}\n          className=\"contactButton\"\n          style={{\n            backgroundColor: \"red\",\n            // height: \"25re\",\n            // maxHeight: \"504rem\",\n          }}\n        >\n          {/* <div style={{ margin: \"auto\" }}>\n            <Button\n              className=\"idk\"\n              onClick={() => toggleForm(!form)}\n              style={{\n                height: \"10rem\",\n                width: \"10rem\",\n                // borderRadius: \"50%\",\n                // marginTop: \"50%\",\n                // marginLeft: \"25%\",\n                position: \"absolute\",\n                // fontSize: \"3rem\",\n                color: \"white\",\n                fontWeight: \"bolder\",\n              }}\n            >\n              Contact\n            </Button>\n          </div> */}\n          <p>Contact</p>\n          {transition.map(\n            ({ item, key, props }) =>\n              item && (\n                <Col key={key} sm={12}>\n                  <animated.div key={key} style={props}>\n                    <ContactForm />\n                  </animated.div>\n                </Col>\n              )\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","/Users/victorpineda/repos/webfolio/src/Components/Parallax.tsx",[],{"ruleId":"103","severity":1,"message":"104","line":4,"column":41,"nodeType":"105","messageId":"106","endLine":4,"endColumn":44,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":20},{"ruleId":"108","severity":1,"message":"112","line":4,"column":30,"nodeType":"110","messageId":"111","endLine":4,"endColumn":33},{"ruleId":"108","severity":1,"message":"113","line":4,"column":35,"nodeType":"110","messageId":"111","endLine":4,"endColumn":43},{"ruleId":"108","severity":1,"message":"114","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":8,"column":9,"nodeType":"105","messageId":"106","endLine":8,"endColumn":12,"suggestions":"115"},{"ruleId":"103","severity":1,"message":"104","line":16,"column":20,"nodeType":"105","messageId":"106","endLine":16,"endColumn":23,"suggestions":"116"},{"ruleId":"108","severity":1,"message":"117","line":17,"column":9,"nodeType":"110","messageId":"111","endLine":17,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":17,"column":41,"nodeType":"105","messageId":"106","endLine":17,"endColumn":44,"suggestions":"118"},{"ruleId":"103","severity":1,"message":"104","line":43,"column":27,"nodeType":"105","messageId":"106","endLine":43,"endColumn":30,"suggestions":"119"},{"ruleId":"103","severity":1,"message":"104","line":102,"column":39,"nodeType":"105","messageId":"106","endLine":102,"endColumn":42,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":23},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["122","123"],"@typescript-eslint/no-unused-vars","'happiibook' is defined but never used.","Identifier","unusedVar","'UIS' is defined but never used.","'Research' is defined but never used.","'AiFillCode' is defined but never used.",["124","125"],["126","127"],"'project' is assigned a value but never used.",["128","129"],["130","131"],["132","133"],"'IoMdChatboxes' is defined but never used.",{"messageId":"134","fix":"135","desc":"136"},{"messageId":"137","fix":"138","desc":"139"},{"messageId":"134","fix":"140","desc":"136"},{"messageId":"137","fix":"141","desc":"139"},{"messageId":"134","fix":"142","desc":"136"},{"messageId":"137","fix":"143","desc":"139"},{"messageId":"134","fix":"144","desc":"136"},{"messageId":"137","fix":"145","desc":"139"},{"messageId":"134","fix":"146","desc":"136"},{"messageId":"137","fix":"147","desc":"139"},{"messageId":"134","fix":"148","desc":"136"},{"messageId":"137","fix":"149","desc":"139"},"suggestUnknown",{"range":"150","text":"151"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"150","text":"152"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"153","text":"151"},{"range":"153","text":"152"},{"range":"154","text":"151"},{"range":"154","text":"152"},{"range":"155","text":"151"},{"range":"155","text":"152"},{"range":"156","text":"151"},{"range":"156","text":"152"},{"range":"157","text":"151"},{"range":"157","text":"152"},[157,160],"unknown","never",[300,303],[460,463],[510,513],[1137,1140],[2415,2418]]
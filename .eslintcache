[{"C:\\Users\\Victor\\repos\\webfolio\\src\\index.tsx":"1","C:\\Users\\Victor\\repos\\webfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\Victor\\repos\\webfolio\\src\\App.tsx":"3","C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\Home.tsx":"4","C:\\Users\\Victor\\repos\\webfolio\\src\\Config\\index.ts":"5","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\Parallax.tsx":"6","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Layout.tsx":"7","C:\\Users\\Victor\\repos\\webfolio\\src\\Config\\Firebase.ts":"8","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\index.ts":"9","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Footer.tsx":"10","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Header.tsx":"11","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Hero.tsx":"12","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Projects.tsx":"13","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Contact.tsx":"14","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Dexterity.tsx":"15","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Drawer.tsx":"16","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\ProjectCard.tsx":"17","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ContactForm.tsx":"18","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ResumeForm.tsx":"19","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\index.ts":"20","C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\icons\\index.tsx":"21","C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\vectors\\index.tsx":"22","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\research.ts":"23","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\UIS.ts":"24","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\foodie.ts":"25","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\happiibook.ts":"26","C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\index.ts":"27","C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\AllProjects.tsx":"28","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\3DPrinterBuild.ts":"29","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\UDSCar.ts":"30"},{"size":517,"mtime":1608357987994,"results":"31","hashOfConfig":"32"},{"size":467,"mtime":1608501357725,"results":"33","hashOfConfig":"32"},{"size":580,"mtime":1611953954688,"results":"34","hashOfConfig":"32"},{"size":1312,"mtime":1609864607099,"results":"35","hashOfConfig":"32"},{"size":29,"mtime":1611808305732,"results":"36","hashOfConfig":"32"},{"size":1273,"mtime":1609832282583,"results":"37","hashOfConfig":"32"},{"size":468,"mtime":1611808305731,"results":"38","hashOfConfig":"32"},{"size":967,"mtime":1611808305732,"results":"39","hashOfConfig":"32"},{"size":232,"mtime":1611808305731,"results":"40","hashOfConfig":"32"},{"size":571,"mtime":1611894226661,"results":"41","hashOfConfig":"32"},{"size":1085,"mtime":1610624478172,"results":"42","hashOfConfig":"32"},{"size":5344,"mtime":1611808305730,"results":"43","hashOfConfig":"32"},{"size":1108,"mtime":1611904299592,"results":"44","hashOfConfig":"32"},{"size":6622,"mtime":1611808305728,"results":"45","hashOfConfig":"32"},{"size":6525,"mtime":1611837218260,"results":"46","hashOfConfig":"32"},{"size":1418,"mtime":1609817005318,"results":"47","hashOfConfig":"32"},{"size":6664,"mtime":1611902734137,"results":"48","hashOfConfig":"32"},{"size":3674,"mtime":1611908128493,"results":"49","hashOfConfig":"32"},{"size":2817,"mtime":1611953277707,"results":"50","hashOfConfig":"32"},{"size":242,"mtime":1611899623119,"results":"51","hashOfConfig":"32"},{"size":907,"mtime":1610238917185,"results":"52","hashOfConfig":"32"},{"size":660,"mtime":1610339813902,"results":"53","hashOfConfig":"32"},{"size":594,"mtime":1611952339518,"results":"54","hashOfConfig":"32"},{"size":600,"mtime":1611864238488,"results":"55","hashOfConfig":"32"},{"size":633,"mtime":1611864458703,"results":"56","hashOfConfig":"32"},{"size":562,"mtime":1611865003342,"results":"57","hashOfConfig":"32"},{"size":78,"mtime":1611889087860,"results":"58","hashOfConfig":"32"},{"size":1585,"mtime":1611902704586,"results":"59","hashOfConfig":"32"},{"size":460,"mtime":1611903984089,"results":"60","hashOfConfig":"32"},{"size":632,"mtime":1611903300616,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"13x6i7x",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},"C:\\Users\\Victor\\repos\\webfolio\\src\\index.tsx",[],[],"C:\\Users\\Victor\\repos\\webfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\App.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\Home.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Config\\index.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\Parallax.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Layout.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Config\\Firebase.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\index.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Footer.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Header.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Hero.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Projects.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Contact.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Dexterity.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Drawer.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\ProjectCard.tsx",["127"],"import React, { useState } from \"react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport { IoMdArrowRoundUp, IoMdClose } from \"react-icons/io\";\r\nimport { Code, TechStack } from \"../../Assets/vectors\";\r\nimport { IconType } from \"react-icons\";\r\n\r\ntype FrameworkIcon = { icon: IconType; Framework: string };\r\ninterface ProjectCardProps {\r\n  data: any;\r\n}\r\n\r\nexport const ProjectCard: React.FC<ProjectCardProps> = (\r\n  props: ProjectCardProps\r\n) => {\r\n  const [info, toggle] = useState(false);\r\n\r\n  const transition = useTransition(info, null, {\r\n    config: {\r\n      duration: 450,\r\n    },\r\n    from: {\r\n      transform: \"translate3d(0, 0em, 0)\",\r\n      opacity: 0,\r\n      width: \"100%\",\r\n      backgroundColor: \"red\",\r\n      height: \"35rem\",\r\n      position: \"absolute\",\r\n      left: \"0\",\r\n      overflow: \"hidden\",\r\n    },\r\n    enter: {\r\n      transform: \"translate3d(0, -35em, 0)\",\r\n      opacity: 1,\r\n    },\r\n    leave: { transform: \"translate3d(0, 35rem, 0)\", opacity: 0 },\r\n  });\r\n\r\n  const ProjectDisplay = () => {\r\n    console.log(\"The size::::\", props.data);\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          backgroundImage: `url(${props.data.backgroundImg})`,\r\n          backgroundSize: \"100vw 100\",\r\n          backgroundRepeat: \"no-repeat\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            position: \"absolute\",\r\n            borderRadius: \"5px\",\r\n            paddingRight: \"10px\",\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              color: \"white\",\r\n              // fontFamily: \"helvetica\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"60px\",\r\n              paddingLeft: \"15px\",\r\n              paddingTop: \"15px\",\r\n            }}\r\n          >\r\n            {props.data.type}\r\n          </h1>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            width: \"90%\",\r\n            height: \"80%\",\r\n            bottom: \"0\",\r\n            right: \"0\",\r\n          }}\r\n        >\r\n          {props.data.cruces.map((crux: string, index: number) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: `${(0 + index) * 20}%`,\r\n                right: \"0\",\r\n                backgroundColor: \"black\",\r\n                padding: \"10px\",\r\n                // paddingRight: `${100 / (index + 1 * 2)}%`,\r\n                borderTopLeftRadius: \"5px\",\r\n                borderBottomLeftRadius: \"5px\",\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              <p\r\n                style={{\r\n                  margin: \"auto\",\r\n                  color: \"white\",\r\n                  letterSpacing: \"1px\",\r\n                  fontSize: \"18px\",\r\n                }}\r\n              >\r\n                {crux}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ProjectContent = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"black\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            float: \"left\",\r\n            width: \"50%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"#000d2a\",\r\n          }}\r\n        >\r\n          <TechStack\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              marginTop: \"2.5rem\",\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            marginLeft: \"50%\",\r\n            height: \"100vh\",\r\n            opacity: \"60%\",\r\n          }}\r\n        >\r\n          <Code />\r\n        </div>\r\n        {props.data.icons.map((Icon: FrameworkIcon, index: number) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: `${(0 + index) * 20}%`,\r\n              right: \"0\",\r\n              backgroundColor: \"black\",\r\n              padding: \"10px\",\r\n              paddingRight: `${100 / (index + 1 * 2)}%`,\r\n              borderTopLeftRadius: \"50px\",\r\n              borderBottomLeftRadius: \"50px\",\r\n              display: \"flex\",\r\n              boxShadow: \"-5px 2px 0px #004FFF\",\r\n            }}\r\n          >\r\n            <Icon.icon\r\n              size=\"3rem\"\r\n              style={{\r\n                fill: \"#000d2a\",\r\n                backgroundColor: \"#ff592e\",\r\n                borderRadius: \"50%\",\r\n                padding: \"5px\",\r\n                marginRight: \"10px\",\r\n              }}\r\n            />\r\n            <p\r\n              style={{\r\n                margin: \"auto\",\r\n                color: \"white\",\r\n                letterSpacing: \"1px\",\r\n              }}\r\n            >\r\n              {Icon.Framework}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <Col\r\n      xs={12}\r\n      sm={12}\r\n      md={6}\r\n      style={{\r\n        backgroundColor: \"black\",\r\n        height: \"35rem\",\r\n        left: \"0\",\r\n        border: \"1px solid black\",\r\n        margin: \"0\",\r\n        padding: \"0\",\r\n      }}\r\n    >\r\n      <ProjectDisplay />\r\n      {transition.map(\r\n        ({ item, key, props }) =>\r\n          item && (\r\n            <Col key={key} sm={12}>\r\n              <animated.div key={key} style={props}>\r\n                <ProjectContent />\r\n              </animated.div>\r\n            </Col>\r\n          )\r\n      )}\r\n      <Button\r\n        style={{\r\n          position: \"absolute\",\r\n          right: \"0\",\r\n          bottom: \"0\",\r\n          // zIndex: 1,\r\n          margin: \"10px\",\r\n          borderRadius: \"50px\",\r\n          // width: \"10rem\",\r\n          width: info ? \"2.7rem\" : \"10rem\",\r\n          height: \"2.7rem\",\r\n          backgroundColor: \"black\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          border: \"2px solid\",\r\n          borderColor: \"white\",\r\n        }}\r\n        onClick={() => toggle(!info)}\r\n      >\r\n        {!info && (\r\n          <p\r\n            style={{ margin: \"auto\", fontWeight: \"bold\", letterSpacing: \"1px\" }}\r\n          >\r\n            Tech Stack\r\n          </p>\r\n        )}\r\n        <div\r\n          style={{\r\n            right: \"0\",\r\n            bottom: \"0\",\r\n            borderRadius: \"50%\",\r\n            width: \"2rem\",\r\n            height: \"2rem\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          {/* TODO: Animate icons to fade in and out */}\r\n          {info ? <IoMdClose size=\"2rem\" /> : <IoMdArrowRoundUp size=\"2rem\" />}\r\n        </div>\r\n      </Button>\r\n    </Col>\r\n  );\r\n};\r\n","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ContactForm.tsx",["128","129"],"import React, { useState } from \"react\";\r\nimport \"../Styles/contactForm.scss\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/functions\";\r\n\r\ninterface ContactFormFields {\r\n  name: string;\r\n  email: string;\r\n  subject: string;\r\n  message: string;\r\n}\r\n\r\ninterface ContactProps {\r\n  toggleForm: () => void;\r\n}\r\n\r\nexport const ContactForm: React.FC<ContactProps> = (props) => {\r\n  const [contactFormFields, setFormFields] = useState<ContactFormFields>({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n  // FIXME: Use types and use state objects\r\n  // React.FormEvent<HTMLFormElement>\r\n  // SyntheticBaseEvent\r\n  const submitContactForm = (event: any) => {\r\n    event.preventDefault();\r\n    const { name, email, subject, message } = event.target.elements;\r\n    const data = {\r\n      name: name.value,\r\n      email: email.value,\r\n      subject: subject.value,\r\n      message: message.value,\r\n    };\r\n\r\n    console.log(\"Calling onSubmit with::::\", data);\r\n    const sendEmails = firebase.functions().httpsCallable(\"contact\");\r\n    console.log(\"Got the email VAR\");\r\n    sendEmails(data)\r\n      .then(() => {\r\n        console.log(\"About to clear the form\");\r\n        const resetForm = { name: \"\", email: \"\", subject: \"\", message: \"\" };\r\n        setFormFields(resetForm);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"The email was not able to send::::\", error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (event: any) => {\r\n    event.preventDefault();\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setFormFields((prevState) => {\r\n      const data = Object.assign({}, prevState);\r\n      const newData = Object.assign(data, { ...data, [name]: value });\r\n      return newData;\r\n    });\r\n\r\n    console.log(\"After setting state\");\r\n  };\r\n  return (\r\n    <Col className=\"colWrapper\" xs={12} sm={12} md={12} lg={12} xl={12}>\r\n      <Button id=\"exitButton\" onClick={props.toggleForm}>\r\n        <IoMdClose size=\"2rem\" style={{ marginLeft: \"-5px\" }} />\r\n      </Button>\r\n      <Form className=\"contactForm\" onSubmit={submitContactForm}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Control\r\n            onChange={(e) => handleInputChange(e)}\r\n            type=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={contactFormFields.name}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Text className=\"formEmailPolicy\">\r\n            {\"Your email will NOT be shared with anyone else.\"}\r\n          </Form.Text>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={(e) => handleInputChange(e)}\r\n            placeholder=\"Email\"\r\n            value={contactFormFields.email}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"subject\">\r\n          <Form.Control\r\n            type=\"subject\"\r\n            name=\"subject\"\r\n            placeholder=\"Subject\"\r\n            value={contactFormFields.subject}\r\n            onChange={(e) => handleInputChange(e)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"message\">\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            name=\"message\"\r\n            rows={3}\r\n            placeholder=\"Message\"\r\n            value={contactFormFields.message}\r\n            onChange={(e) => handleInputChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"submitButton\" variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Col>\r\n  );\r\n};\r\n","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ResumeForm.tsx",["130"],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\index.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\icons\\index.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\vectors\\index.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\research.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\UIS.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\foodie.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\happiibook.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\index.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\AllProjects.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\3DPrinterBuild.ts",["131"],"import img from \"../../Assets/images/2.jpg\";\r\nimport { IoLogoFirebase } from \"react-icons/io5\";\r\nimport { MdBuild } from \"react-icons/md\";\r\nimport { SiArduino } from \"react-icons/si\";\r\n\r\nexport const ThreeDPrinterBuild = {\r\n  title: \"3D Printer build\",\r\n  type: \"3D Printer\",\r\n  icons: [\r\n    { icon: MdBuild, Framework: \"DIY build kit\" },\r\n    { icon: SiArduino, Framework: \"Arduino Mega\" },\r\n  ],\r\n  backgroundImg: img,\r\n  cruces: [\"Built 3D Printer\"],\r\n};\r\n","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\UDSCar.ts",["132"],"import img from \"../../Assets/images/2.jpg\";\r\nimport { IoLogoFirebase, IoCodeSlashOutline } from \"react-icons/io5\";\r\nimport { SiArduino } from \"react-icons/si\";\r\nimport { GiCartwheel } from \"react-icons/gi\";\r\n\r\nexport const UDSCar = {\r\n  title: \"Ultrasonic Distance Sensor Car\",\r\n  type: \"Robot\",\r\n  icons: [\r\n    { icon: SiArduino, Framework: \"Arduino\" },\r\n    { icon: GiCartwheel, Framework: \"DC motors\" },\r\n    { icon: IoCodeSlashOutline, Framework: \"C Programming\" },\r\n    { icon: IoCodeSlashOutline, Framework: \"Distance Sensor\" },\r\n  ],\r\n  backgroundImg: img,\r\n  cruces: [\"Ultrasonic Distance Sensor\", \"Autonomous car\"],\r\n};\r\n",{"ruleId":"133","severity":1,"message":"134","line":10,"column":9,"nodeType":"135","messageId":"136","endLine":10,"endColumn":12,"suggestions":"137"},{"ruleId":"133","severity":1,"message":"134","line":29,"column":37,"nodeType":"135","messageId":"136","endLine":29,"endColumn":40,"suggestions":"138"},{"ruleId":"133","severity":1,"message":"134","line":53,"column":37,"nodeType":"135","messageId":"136","endLine":53,"endColumn":40,"suggestions":"139"},{"ruleId":"133","severity":1,"message":"134","line":35,"column":37,"nodeType":"135","messageId":"136","endLine":35,"endColumn":40,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":24},{"ruleId":"141","severity":1,"message":"142","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":24},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["145","146"],["147","148"],["149","150"],["151","152"],"@typescript-eslint/no-unused-vars","'IoLogoFirebase' is defined but never used.","Identifier","unusedVar",{"messageId":"153","fix":"154","desc":"155"},{"messageId":"156","fix":"157","desc":"158"},{"messageId":"153","fix":"159","desc":"155"},{"messageId":"156","fix":"160","desc":"158"},{"messageId":"153","fix":"161","desc":"155"},{"messageId":"156","fix":"162","desc":"158"},{"messageId":"153","fix":"163","desc":"155"},{"messageId":"156","fix":"164","desc":"158"},"suggestUnknown",{"range":"165","text":"166"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"165","text":"167"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"168","text":"166"},{"range":"168","text":"167"},{"range":"169","text":"166"},{"range":"169","text":"167"},{"range":"170","text":"166"},{"range":"170","text":"167"},[409,412],"unknown","never",[778,781],[1559,1562],[1094,1097]]
[{"C:\\Users\\Victor\\repos\\webfolio\\src\\index.tsx":"1","C:\\Users\\Victor\\repos\\webfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\Victor\\repos\\webfolio\\src\\App.tsx":"3","C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\index.ts":"4","C:\\Users\\Victor\\repos\\webfolio\\src\\Config\\index.ts":"5","C:\\Users\\Victor\\repos\\webfolio\\src\\Config\\Firebase.ts":"6","C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\AllProjects.tsx":"7","C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\Home.tsx":"8","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\Parallax.tsx":"9","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Layout.tsx":"10","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\ProjectCard.tsx":"11","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\index.ts":"12","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\index.ts":"13","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Footer.tsx":"14","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\3DPrinterBuild.ts":"15","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\research.ts":"16","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\UIS.ts":"17","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Projects.tsx":"18","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Hero.tsx":"19","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\foodie.ts":"20","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Header.tsx":"21","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Contact.tsx":"22","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\happiibook.ts":"23","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\UDSCar.ts":"24","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Dexterity.tsx":"25","C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\vectors\\index.tsx":"26","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ResumeForm.tsx":"27","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Drawer.tsx":"28","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ContactForm.tsx":"29","C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\icons\\index.tsx":"30","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\hooks\\CustomForm.tsx":"31"},{"size":517,"mtime":1608357987994,"results":"32","hashOfConfig":"33"},{"size":467,"mtime":1608501357725,"results":"34","hashOfConfig":"33"},{"size":581,"mtime":1613358794280,"results":"35","hashOfConfig":"33"},{"size":78,"mtime":1612144102743,"results":"36","hashOfConfig":"33"},{"size":29,"mtime":1611808305732,"results":"37","hashOfConfig":"33"},{"size":1023,"mtime":1613178695877,"results":"38","hashOfConfig":"33"},{"size":1585,"mtime":1612144102742,"results":"39","hashOfConfig":"33"},{"size":487,"mtime":1612331320377,"results":"40","hashOfConfig":"33"},{"size":1235,"mtime":1612331785423,"results":"41","hashOfConfig":"33"},{"size":514,"mtime":1613368391371,"results":"42","hashOfConfig":"33"},{"size":5327,"mtime":1613370014119,"results":"43","hashOfConfig":"33"},{"size":232,"mtime":1611808305731,"results":"44","hashOfConfig":"33"},{"size":242,"mtime":1612144102741,"results":"45","hashOfConfig":"33"},{"size":1124,"mtime":1613374420472,"results":"46","hashOfConfig":"33"},{"size":680,"mtime":1613269546818,"results":"47","hashOfConfig":"33"},{"size":610,"mtime":1613063889531,"results":"48","hashOfConfig":"33"},{"size":718,"mtime":1613270018898,"results":"49","hashOfConfig":"33"},{"size":633,"mtime":1612249868731,"results":"50","hashOfConfig":"33"},{"size":4233,"mtime":1612332078380,"results":"51","hashOfConfig":"33"},{"size":736,"mtime":1613269392584,"results":"52","hashOfConfig":"33"},{"size":1085,"mtime":1610624478172,"results":"53","hashOfConfig":"33"},{"size":4468,"mtime":1613366720830,"results":"54","hashOfConfig":"33"},{"size":969,"mtime":1613269878740,"results":"55","hashOfConfig":"33"},{"size":823,"mtime":1613269670474,"results":"56","hashOfConfig":"33"},{"size":3311,"mtime":1613367029722,"results":"57","hashOfConfig":"33"},{"size":660,"mtime":1610339813902,"results":"58","hashOfConfig":"33"},{"size":2353,"mtime":1613346627089,"results":"59","hashOfConfig":"33"},{"size":1089,"mtime":1613368112576,"results":"60","hashOfConfig":"33"},{"size":2910,"mtime":1613346616559,"results":"61","hashOfConfig":"33"},{"size":907,"mtime":1610238917185,"results":"62","hashOfConfig":"33"},{"size":5333,"mtime":1613184006991,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"irqegb",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},"C:\\Users\\Victor\\repos\\webfolio\\src\\index.tsx",[],[],"C:\\Users\\Victor\\repos\\webfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\App.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\index.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Config\\index.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Config\\Firebase.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\AllProjects.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\Home.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\Parallax.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Layout.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\ProjectCard.tsx",["132"],"import React, { useState } from \"react\";\r\nimport \"../../Styles/components/projectCard.scss\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport { IoMdArrowRoundUp, IoMdClose } from \"react-icons/io\";\r\nimport { Code, TechStack } from \"../../Assets/vectors\";\r\nimport { IconType } from \"react-icons\";\r\n\r\ntype FrameworkIcon = { icon: IconType; Framework: string };\r\ninterface ProjectCardProps {\r\n  data: any;\r\n}\r\n\r\nexport const ProjectCard: React.FC<ProjectCardProps> = (\r\n  props: ProjectCardProps\r\n) => {\r\n  const [projectTechStack, toggleTechStack] = useState(false);\r\n  const [projectDetails, toggleDetails] = useState(false);\r\n\r\n  const transition = useTransition(projectTechStack, null, {\r\n    config: {\r\n      duration: 450,\r\n    },\r\n    from: {\r\n      transform: \"translate3d(0, 0rem, 0)\",\r\n      opacity: 0,\r\n      width: \"100%\",\r\n      backgroundColor: \"red\",\r\n      height: \"35rem\",\r\n      position: \"absolute\",\r\n      left: \"0\",\r\n      overflow: \"hidden\",\r\n    },\r\n    enter: {\r\n      transform: \"translate3d(0, -35rem, 0)\",\r\n      opacity: 1,\r\n    },\r\n    leave: { transform: \"translate3d(0, 35rem, 0)\", opacity: 0 },\r\n  });\r\n\r\n  const transitionDetails = useTransition(projectDetails, null, {\r\n    config: {\r\n      duration: 450,\r\n    },\r\n    from: {\r\n      transform: \"translate3d(0, 0rem, 0)\",\r\n      opacity: 0,\r\n      width: \"100%\",\r\n      backgroundColor: \"#000d2a\",\r\n      height: \"35rem\",\r\n      position: \"absolute\",\r\n      left: \"0\",\r\n      overflow: \"hidden\",\r\n    },\r\n    enter: {\r\n      transform: \"translate3d(0, -35rem, 0)\",\r\n      opacity: 1,\r\n    },\r\n    leave: { transform: \"translate3d(0, 35rem, 0)\", opacity: 0 },\r\n  });\r\n\r\n  const ProjectDisplay = () => {\r\n    return (\r\n      <div\r\n        id=\"projectDisplayWrapper\"\r\n        style={{\r\n          backgroundImage: `url(${props.data.backgroundImg})`,\r\n        }}\r\n      >\r\n        <h1 id=\"projectDisplayHeader\">{props.data.title}</h1>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ProjectDetails = () => {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {props.data.cruces.map((crux: string, index: number) => (\r\n            <div key={index} style={{ marginTop: \"25px\" }}>\r\n              <ul style={{ color: \"white\" }}>\r\n                <li>\r\n                  <p className=\"displayCrux\">{crux}</p>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ProjectContent = () => {\r\n    return (\r\n      <div id=\"projectContentWrapper\">\r\n        <div id=\"techStackIconWrapper\">\r\n          <TechStack id=\"techStackIcon\" />\r\n        </div>\r\n        <div id=\"codeVectorWrapper\">\r\n          <Code />\r\n        </div>\r\n        {props.data.icons.map((Icon: FrameworkIcon, index: number) => (\r\n          <div\r\n            className=\"frameworkWrapper\"\r\n            key={index}\r\n            style={{\r\n              top: `${(0 + index) * 20}%`,\r\n              paddingRight: `${100 / (index + 1 * 2)}%`,\r\n            }}\r\n          >\r\n            <Icon.icon className=\"frameworkIcon\" size=\"3rem\" />\r\n            <p className=\"frameworkTitle\">{Icon.Framework}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <Col className=\"projectCardWrapper\" xs={12} sm={12} md={6}>\r\n      <ProjectDisplay />\r\n      {transition.map(\r\n        ({ item, key, props }) =>\r\n          item && (\r\n            <Col key={key} sm={12}>\r\n              <animated.div key={key} style={props}>\r\n                <ProjectContent />\r\n              </animated.div>\r\n            </Col>\r\n          )\r\n      )}\r\n      {projectTechStack && (\r\n        <div>\r\n          {transitionDetails.map(\r\n            ({ item, key, props }) =>\r\n              item && (\r\n                <Col key={key} sm={12}>\r\n                  <animated.div key={key} style={props}>\r\n                    <ProjectDetails />\r\n                  </animated.div>\r\n                </Col>\r\n              )\r\n          )}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <Button\r\n          className=\"techStackOpenButton\"\r\n          style={{ width: projectTechStack ? \"2.7rem\" : \"10rem\" }}\r\n          onClick={() => {\r\n            toggleTechStack(!projectTechStack);\r\n            toggleDetails(false);\r\n          }}\r\n        >\r\n          {!projectTechStack && (\r\n            <p className=\"toggleInfoButtonText\">Tech Stack</p>\r\n          )}\r\n          <div\r\n            style={{\r\n              width: \"2rem\",\r\n              height: \"2rem\",\r\n            }}\r\n          >\r\n            {projectTechStack ? (\r\n              <IoMdClose size=\"2rem\" />\r\n            ) : (\r\n              <IoMdArrowRoundUp size=\"2rem\" />\r\n            )}\r\n          </div>\r\n        </Button>\r\n        {projectTechStack && (\r\n          <div>\r\n            <Button\r\n              className=\"projectDetailsToggleButton\"\r\n              onClick={() => toggleDetails(!projectDetails)}\r\n            >\r\n              <p className=\"detailsButtonText\">Details</p>\r\n              <div className=\"detailsArrowIconWrapper\">\r\n                {projectDetails ? (\r\n                  <IoMdClose size=\"2rem\" />\r\n                ) : (\r\n                  <IoMdArrowRoundUp size=\"2rem\" />\r\n                )}\r\n              </div>\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\index.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\index.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Footer.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\3DPrinterBuild.ts",["133"],"import img from \"../../Assets/images/three7.jpg\";\r\nimport { IoLogoFirebase } from \"react-icons/io5\";\r\nimport { MdBuild } from \"react-icons/md\";\r\nimport { SiArduino } from \"react-icons/si\";\r\n\r\nexport const ThreeDPrinterBuild = {\r\n  title: \"3D Printer Build\",\r\n  type: \"Hardware and Software\",\r\n  icons: [\r\n    { icon: MdBuild, Framework: \"DIY build kit\" },\r\n    { icon: SiArduino, Framework: \"Arduino Mega\" },\r\n  ],\r\n  backgroundImg: img,\r\n  cruces: [\r\n    \"Assembled various hardware components\",\r\n    \"Wired/soldered electrical hardware used to control components\",\r\n    \"Designed parts in SolidWorks to be printed\",\r\n    \"Ensured software was operating as intended\",\r\n  ],\r\n};\r\n","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\research.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\UIS.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Projects.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Hero.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\foodie.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Header.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Contact.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\happiibook.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\UDSCar.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Dexterity.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\vectors\\index.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ResumeForm.tsx",["134"],"import React, { useState } from \"react\";\r\nimport \"../Styles/components/contactForm.scss\";\r\nimport { Form, Col, Button } from \"react-bootstrap\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useCustomForm } from \"./hooks/CustomForm\";\r\n\r\ninterface ResumeFormFields {\r\n  name: string;\r\n  email: string;\r\n}\r\ninterface ResumeFormProps {\r\n  toggleForm: () => void;\r\n}\r\n\r\nexport const ResumeForm: React.FC<ResumeFormProps> = (props) => {\r\n  const {\r\n    submitForm,\r\n    handleInputChange,\r\n    emailSendingStatusComponent,\r\n    emailSentComponent,\r\n  } = useCustomForm();\r\n\r\n  const [formFields, setFormFields] = useState<ResumeFormFields>({\r\n    name: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const onFormSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const formSuccess = await submitForm(\"sendResume\", formFields);\r\n    if (formSuccess) {\r\n      setFormFields({ name: \"\", email: \"\" });\r\n    }\r\n  };\r\n\r\n  const onInputChange = (e: any) => {\r\n    handleInputChange(e, setFormFields);\r\n  };\r\n\r\n  return (\r\n    <Col className=\"colWrapper\" xs={12} sm={12} md={12} lg={12} xl={12}>\r\n      <div>\r\n        <Button id=\"exitButton\" onClick={props.toggleForm}>\r\n          <IoMdClose size=\"2rem\" style={{ marginLeft: \"-5px\" }} />\r\n        </Button>\r\n      </div>\r\n      <Form\r\n        onSubmit={onFormSubmit}\r\n        style={{\r\n          maxWidth: \"35rem\",\r\n          margin: \"auto\",\r\n          marginTop: \"55px\",\r\n        }}\r\n      >\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Text className=\"formEmailPolicy\">\r\n            {\"Your information will NOT be shared with anyone else.\"}\r\n          </Form.Text>\r\n          <Form.Control\r\n            type=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            onChange={onInputChange}\r\n            value={formFields.name}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={onInputChange}\r\n            value={formFields.email}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button className=\"submitButton\" variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      {emailSendingStatusComponent}\r\n      {emailSentComponent}\r\n    </Col>\r\n  );\r\n};\r\n","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Drawer.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ContactForm.tsx",["135"],"import React, { useState } from \"react\";\r\nimport \"../Styles/components/contactForm.scss\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useCustomForm } from \"./hooks/CustomForm\";\r\n\r\ninterface ContactFormFields {\r\n  name: string;\r\n  email: string;\r\n  subject: string;\r\n  message: string;\r\n}\r\n\r\ninterface ContactProps {\r\n  toggleForm: () => void;\r\n}\r\n\r\nexport const ContactForm: React.FC<ContactProps> = (props) => {\r\n  const {\r\n    submitForm,\r\n    handleInputChange,\r\n    emailSendingStatusComponent,\r\n    emailSentComponent,\r\n  } = useCustomForm();\r\n\r\n  const [contactFormFields, setFormFields] = useState<ContactFormFields>({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const onFormSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const formSuccess = await submitForm(\"contact\", contactFormFields);\r\n    if (formSuccess) {\r\n      setFormFields({ name: \"\", email: \"\", subject: \"\", message: \"\" });\r\n    }\r\n  };\r\n\r\n  const onInputChange = (e: any) => {\r\n    handleInputChange(e, setFormFields);\r\n  };\r\n\r\n  return (\r\n    <Col className=\"colWrapper\" xs={12} sm={12} md={12} lg={12} xl={12}>\r\n      <Button id=\"exitButton\" onClick={props.toggleForm}>\r\n        <IoMdClose size=\"2rem\" style={{ marginLeft: \"-5px\" }} />\r\n      </Button>\r\n      <Form className=\"contactForm\" onSubmit={onFormSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Text className=\"formEmailPolicy\">\r\n            {\"Your information will NOT be shared with anyone else.\"}\r\n          </Form.Text>\r\n          <Form.Control\r\n            onChange={onInputChange}\r\n            type=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={contactFormFields.name}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={onInputChange}\r\n            placeholder=\"Email\"\r\n            value={contactFormFields.email}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"subject\">\r\n          <Form.Control\r\n            type=\"subject\"\r\n            name=\"subject\"\r\n            placeholder=\"Subject\"\r\n            value={contactFormFields.subject}\r\n            onChange={onInputChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"message\">\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            name=\"message\"\r\n            rows={3}\r\n            placeholder=\"Message\"\r\n            value={contactFormFields.message}\r\n            onChange={onInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"submitButton\" variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      {emailSendingStatusComponent}\r\n      {emailSentComponent}\r\n    </Col>\r\n  );\r\n};\r\n","C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\icons\\index.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\hooks\\CustomForm.tsx",["136","137"],"import React, { useState } from \"react\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { IoMdCheckmark } from \"react-icons/io\";\r\nimport { Col, Spinner } from \"react-bootstrap\";\r\nimport firebase from \"firebase\";\r\n\r\ntype FunctionName = \"sendResume\" | \"contact\";\r\n\r\nexport const useCustomForm = () => {\r\n  const [sendingEmail, setSendingEmail] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [emailFailed, setEmailFailed] = useState(false);\r\n\r\n  const submitForm = async <T,>(\r\n    functionName: FunctionName,\r\n    functionData: T\r\n  ) => {\r\n    setSendingEmail(true);\r\n    const sendEmail = firebase.functions().httpsCallable(functionName);\r\n\r\n    try {\r\n      await sendEmail(functionData);\r\n      setSendingEmail(false);\r\n      setEmailSent(true);\r\n      setTimeout(() => {\r\n        setEmailSent(false);\r\n      }, 1700);\r\n      return true;\r\n    } catch {\r\n      setEmailFailed(true);\r\n      setTimeout(() => {\r\n        setSendingEmail(false);\r\n      }, 1700);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = <T,>(\r\n    event: any,\r\n    setFormFields: React.Dispatch<React.SetStateAction<T>>\r\n  ) => {\r\n    event.preventDefault();\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setFormFields((prevState) => {\r\n      const data = Object.assign({}, prevState);\r\n      const newData = Object.assign(data, { ...data, [name]: value });\r\n      return newData;\r\n    });\r\n  };\r\n\r\n  const emailSendingStatusTransition = useTransition(sendingEmail, null, {\r\n    config: {\r\n      duration: 450,\r\n    },\r\n    from: {\r\n      opacity: 0,\r\n      width: \"100%\",\r\n      backgroundColor: \"rgba(0,0,0,0.9)\",\r\n      height: \"30rem\",\r\n      position: \"absolute\",\r\n      left: \"0\",\r\n      top: \"-25rem\",\r\n      overflow: \"hidden\",\r\n      borderRadius: \"25px\",\r\n      boxShadow: \"10px 10px 20px black, -10px 10px 20px black\",\r\n    },\r\n    enter: {\r\n      opacity: 50,\r\n    },\r\n    leave: { opacity: 0 },\r\n  });\r\n\r\n  const emailSentTransition = useTransition(emailSent, null, {\r\n    config: {\r\n      duration: 450,\r\n    },\r\n    from: {\r\n      opacity: 0,\r\n      width: \"100%\",\r\n      backgroundColor: \"rgba(0,0,0,0.9)\",\r\n      height: \"30rem\",\r\n      position: \"absolute\",\r\n      left: \"0\",\r\n      top: \"-25rem\",\r\n      overflow: \"hidden\",\r\n      borderRadius: \"25px\",\r\n      boxShadow: \"10px 10px 20px black, -10px 10px 20px black\",\r\n    },\r\n    enter: {\r\n      opacity: 50,\r\n    },\r\n    leave: { opacity: 0 },\r\n  });\r\n\r\n  const emailSendingStatusComponent = emailSendingStatusTransition.map(\r\n    ({ item, key, props }) =>\r\n      item && (\r\n        <Col key={key} sm={12}>\r\n          <animated.div key={key} style={props}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"10rem\",\r\n              }}\r\n            >\r\n              {!emailFailed ? (\r\n                <p\r\n                  style={{\r\n                    fontSize: \"4rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                    fontFamily: \"San Francisco Text\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  Sending\r\n                </p>\r\n              ) : (\r\n                <p\r\n                  style={{\r\n                    fontSize: \"3rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                    fontFamily: \"San Francisco Text\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  Error sending email\r\n                </p>\r\n              )}\r\n              <Spinner\r\n                animation=\"grow\"\r\n                style={{\r\n                  width: \"5rem\",\r\n                  height: \"5rem\",\r\n                  color: !emailFailed ? \"#00c5d4\" : \"red\",\r\n                }}\r\n              />\r\n            </div>\r\n          </animated.div>\r\n        </Col>\r\n      )\r\n  );\r\n\r\n  const emailSentComponent = emailSentTransition.map(\r\n    ({ item, key, props }) =>\r\n      item && (\r\n        <Col key={key} sm={12}>\r\n          <animated.div key={key} style={props}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"10rem\",\r\n              }}\r\n            >\r\n              <p\r\n                style={{\r\n                  fontSize: \"3rem\",\r\n                  width: \"100%\",\r\n                  textAlign: \"center\",\r\n                  fontFamily: \"San Francisco Text\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                Email Sent\r\n              </p>\r\n              <IoMdCheckmark\r\n                size=\"5rem\"\r\n                color=\"white\"\r\n                style={{\r\n                  borderRadius: \"50%\",\r\n                  backgroundColor: \"#00c5d4\",\r\n                  padding: \"7px\",\r\n                }}\r\n              />\r\n            </div>\r\n          </animated.div>\r\n        </Col>\r\n      )\r\n  );\r\n\r\n  return {\r\n    submitForm,\r\n    handleInputChange,\r\n    emailSendingStatusComponent,\r\n    emailSentComponent,\r\n  };\r\n};\r\n",{"ruleId":"138","severity":1,"message":"139","line":11,"column":9,"nodeType":"140","messageId":"141","endLine":11,"endColumn":12,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":36,"column":29,"nodeType":"140","messageId":"141","endLine":36,"endColumn":32,"suggestions":"147"},{"ruleId":"138","severity":1,"message":"139","line":41,"column":29,"nodeType":"140","messageId":"141","endLine":41,"endColumn":32,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":9,"column":30,"nodeType":"151","messageId":"152","endLine":9,"endColumn":35},{"ruleId":"138","severity":1,"message":"139","line":39,"column":12,"nodeType":"140","messageId":"141","endLine":39,"endColumn":15,"suggestions":"153"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["154","155"],"@typescript-eslint/no-unused-vars","'IoLogoFirebase' is defined but never used.","Identifier","unusedVar",["156","157"],["158","159"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["160","161"],{"messageId":"162","fix":"163","desc":"164"},{"messageId":"165","fix":"166","desc":"167"},{"messageId":"162","fix":"168","desc":"164"},{"messageId":"165","fix":"169","desc":"167"},{"messageId":"162","fix":"170","desc":"164"},{"messageId":"165","fix":"171","desc":"167"},{"messageId":"162","fix":"172","desc":"164"},{"messageId":"165","fix":"173","desc":"167"},"suggestUnknown",{"range":"174","text":"175"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"174","text":"176"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"177","text":"175"},{"range":"177","text":"176"},{"range":"178","text":"175"},{"range":"178","text":"176"},{"range":"179","text":"175"},{"range":"179","text":"176"},[461,464],"unknown","never",[967,970],[1079,1082],[1097,1100]]
[{"C:\\Users\\Victor\\repos\\webfolio\\src\\index.tsx":"1","C:\\Users\\Victor\\repos\\webfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\Victor\\repos\\webfolio\\src\\App.tsx":"3","C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\Home.tsx":"4","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\Parallax.tsx":"5","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Layout.tsx":"6","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\index.ts":"7","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Header.tsx":"8","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Dexterity.tsx":"9","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Projects.tsx":"10","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Contact.tsx":"11","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Hero.tsx":"12","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Drawer.tsx":"13","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\ProjectCard.tsx":"14","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\index.ts":"15","C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\icons\\index.tsx":"16","C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\vectors\\index.tsx":"17","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\research.ts":"18","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\UIS.ts":"19","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\foodie.ts":"20","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\happiibook.ts":"21"},{"size":517,"mtime":1608357987994,"results":"22","hashOfConfig":"23"},{"size":467,"mtime":1608501357725,"results":"24","hashOfConfig":"23"},{"size":192,"mtime":1608709760006,"results":"25","hashOfConfig":"23"},{"size":1312,"mtime":1609864607099,"results":"26","hashOfConfig":"23"},{"size":1273,"mtime":1609832282583,"results":"27","hashOfConfig":"23"},{"size":335,"mtime":1608714125505,"results":"28","hashOfConfig":"23"},{"size":196,"mtime":1609817005317,"results":"29","hashOfConfig":"23"},{"size":910,"mtime":1609817005315,"results":"30","hashOfConfig":"23"},{"size":5025,"mtime":1610081086538,"results":"31","hashOfConfig":"23"},{"size":656,"mtime":1609860313859,"results":"32","hashOfConfig":"23"},{"size":7251,"mtime":1609861223408,"results":"33","hashOfConfig":"23"},{"size":5341,"mtime":1609899055149,"results":"34","hashOfConfig":"23"},{"size":1418,"mtime":1609817005318,"results":"35","hashOfConfig":"23"},{"size":5160,"mtime":1609817005319,"results":"36","hashOfConfig":"23"},{"size":150,"mtime":1609817005321,"results":"37","hashOfConfig":"23"},{"size":751,"mtime":1609977704004,"results":"38","hashOfConfig":"23"},{"size":432,"mtime":1609817005313,"results":"39","hashOfConfig":"23"},{"size":589,"mtime":1609817005321,"results":"40","hashOfConfig":"23"},{"size":491,"mtime":1609817005319,"results":"41","hashOfConfig":"23"},{"size":781,"mtime":1609817005320,"results":"42","hashOfConfig":"23"},{"size":792,"mtime":1609817005320,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"13x6i7x",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Victor\\repos\\webfolio\\src\\index.tsx",[],[],"C:\\Users\\Victor\\repos\\webfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\App.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Pages\\Home.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\Parallax.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Layout.tsx",["90"],"import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Header } from \"../sections/Header\";\r\nexport const Layout: React.FC = (props: any) => {\r\n  return (\r\n    <Container fluid style={{ backgroundColor: \"\", margin: \"0\", padding: \"0\" }}>\r\n      <Header />\r\n      {props.children}\r\n    </Container>\r\n  );\r\n};\r\n","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\index.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Header.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Dexterity.tsx",["91"],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Projects.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Contact.tsx",["92","93"],"import React, { useState, useContext } from \"react\";\r\nimport \"../../Styles/main.scss\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport { ParallaxContext } from \"../Parallax\";\r\n\r\nexport const Contact: React.FC = () => {\r\n  const [form, toggleForm] = useState(false);\r\n\r\n  // const ParallaxAttributes = useContext(ParallaxContext);\r\n\r\n  // console.log(\"The parallax properties::::\", ParallaxAttributes);\r\n\r\n  const transition = useTransition(form, null, {\r\n    config: {\r\n      duration: 450,\r\n    },\r\n    from: {\r\n      opacity: 0,\r\n      width: \"100%\",\r\n      backgroundColor: \"black\",\r\n      height: \"33rem\",\r\n      position: \"absolute\",\r\n      left: \"0\",\r\n      overflow: \"hidden\",\r\n      borderRadius: \"25px\",\r\n      boxShadow: \"10px 10px 20px black, -10px 10px 20px black\",\r\n    },\r\n    enter: {\r\n      opacity: 1,\r\n    },\r\n    leave: { opacity: 0 },\r\n  });\r\n\r\n  const ContactForm = () => {\r\n    return (\r\n      <Col\r\n        xs={12}\r\n        sm={12}\r\n        md={12}\r\n        lg={12}\r\n        xl={12}\r\n        style={{\r\n          height: \"20rem\",\r\n          borderRadius: \"25px\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Button\r\n          style={{\r\n            width: \"3rem\",\r\n            height: \"3rem\",\r\n            float: \"right\",\r\n            marginBottom: \"10px\",\r\n            border: \"2px solid white\",\r\n            backgroundColor: \"black\",\r\n            borderRadius: \"25px\",\r\n            marginRight: \"3%\",\r\n          }}\r\n          onClick={() => toggleForm(!form)}\r\n        >\r\n          <IoMdClose size=\"2rem\" style={{ marginLeft: \"-5px\" }} />\r\n        </Button>\r\n        <Form style={{ maxWidth: \"35rem\", margin: \"auto\" }}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Control type=\"name\" placeholder=\"Name\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Text\r\n              style={{\r\n                color: \"white\",\r\n                letterSpacing: \"1.5px\",\r\n                paddingBottom: \"3px\",\r\n                paddingLeft: \"2.5px\",\r\n              }}\r\n            >\r\n              {\"Your email will NOT be shared with anyone else.\"}\r\n            </Form.Text>\r\n            <Form.Control type=\"email\" placeholder=\"Email\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Control type=\"subject\" placeholder=\"Subject\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Control as=\"textarea\" rows={3} placeholder=\"Message\" />\r\n          </Form.Group>\r\n          <Button\r\n            style={{\r\n              marginLeft: \"2%\",\r\n              backgroundColor: \"black\",\r\n              border: \"2px solid white\",\r\n            }}\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    );\r\n  };\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={{\r\n        backgroundColor: \"black\",\r\n        // backgroundColor: \"#000d2a\",\r\n        marginBottom: \"30px\",\r\n        margin: \"0\",\r\n        padding: \"0\",\r\n        marginTop: \"33px\",\r\n        paddingBottom: \"5rem\",\r\n        paddingTop: \"5rem\",\r\n      }}\r\n    >\r\n      <Row\r\n        style={{\r\n          // backgroundColor: \"red\",\r\n          marginLeft: \"2%\",\r\n          marginRight: \"2%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          margin: \"0\",\r\n          padding: \"0\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {/* <Col md={3}></Col> */}\r\n        <Col\r\n          xs={12}\r\n          sm={12}\r\n          md={7}\r\n          lg={6}\r\n          xl={6}\r\n          style={{\r\n            // backgroundColor: \"#0cce6b\",\r\n            // backgroundColor: \"#000d2a\",\r\n            // height: \"40rem\",\r\n            // height: \"100%\",\r\n            // width: \"100%\",\r\n            margin: \"auto\",\r\n          }}\r\n        >\r\n          <div>\r\n            <p\r\n              style={{\r\n                fontSize: \"5rem\",\r\n                overflowWrap: \"break-word\",\r\n                margin: \"0\",\r\n                lineHeight: \"5rem\",\r\n                color: \"white\",\r\n                fontFamily: \"Arial\",\r\n              }}\r\n            >\r\n              {\r\n                \"Hi, My name is Victor and I'm a software developer. Feel free to contact me.\"\r\n              }\r\n            </p>\r\n            <div\r\n              className=\"contactButton\"\r\n              style={{\r\n                height: \"10px\",\r\n                marginTop: \"5px\",\r\n                borderRadius: \"20px\",\r\n                width: \"25%\",\r\n              }}\r\n            />\r\n            <div\r\n              className=\"contactButton\"\r\n              style={{\r\n                height: \"10px\",\r\n                marginTop: \"10px\",\r\n                marginBottom: \"5px\",\r\n                borderRadius: \"20px\",\r\n                width: \"50%\",\r\n              }}\r\n            />\r\n            <div\r\n              className=\"contactButton\"\r\n              style={{\r\n                height: \"10px\",\r\n                marginTop: \"10px\",\r\n                marginBottom: \"5px\",\r\n                borderRadius: \"20px\",\r\n                width: \"75%\",\r\n              }}\r\n            />\r\n            <div\r\n              className=\"contactButton\"\r\n              style={{\r\n                height: \"10px\",\r\n                marginTop: \"10px\",\r\n                marginBottom: \"5px\",\r\n                borderRadius: \"20px\",\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xs={11}\r\n          sm={11}\r\n          md={6}\r\n          lg={5}\r\n          xl={5}\r\n          className=\"contactButton\"\r\n          style={{\r\n            backgroundColor: \"red\",\r\n            height: \"20rem\",\r\n            borderRadius: \"25px\",\r\n            margin: \"auto\",\r\n            marginTop: \"15px\",\r\n          }}\r\n        >\r\n          <div style={{ width: \"100%\", height: \"100%\", position: \"absolute\" }}>\r\n            <Button\r\n              onClick={() => toggleForm(!form)}\r\n              style={{\r\n                backgroundColor: \"black\",\r\n                border: \"3px solid white\",\r\n                top: \"5%\",\r\n                position: \"absolute\",\r\n                borderRadius: \"25px\",\r\n                width: \"15rem\",\r\n                height: \"15rem\",\r\n                boxShadow: \"20px 20px 40px black\",\r\n              }}\r\n            >\r\n              <p\r\n                style={{\r\n                  margin: \"auto\",\r\n                  textAlign: \"center\",\r\n                  fontSize: \"3rem\",\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"Arial\",\r\n                }}\r\n              >\r\n                Contact\r\n              </p>\r\n            </Button>\r\n          </div>\r\n          {transition.map(\r\n            ({ item, key, props }) =>\r\n              item && (\r\n                <Col key={key} sm={12}>\r\n                  <animated.div key={key} style={props}>\r\n                    <ContactForm />\r\n                  </animated.div>\r\n                </Col>\r\n              )\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\sections\\Hero.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\Drawer.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Components\\ui\\ProjectCard.tsx",["94","95","96","97","98","99"],"import React, { useState } from \"react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport { IoMdArrowRoundUp, IoMdClose } from \"react-icons/io\";\r\nimport { Code, TechStack } from \"../../Assets/vectors\";\r\n\r\ninterface ProjectCardProps {\r\n  data: any;\r\n}\r\n\r\nexport const ProjectCard: React.FC<ProjectCardProps> = (\r\n  props: ProjectCardProps\r\n) => {\r\n  const [info, toggle] = useState(false);\r\n\r\n  let projectData: any = {};\r\n  const project = props.data.map((data: any) => (projectData = data));\r\n  // console.log(\"Project Data:::\", project);\r\n\r\n  const transition = useTransition(info, null, {\r\n    config: {\r\n      duration: 450,\r\n    },\r\n    from: {\r\n      transform: \"translate3d(0, 0em, 0)\",\r\n      opacity: 0,\r\n      width: \"100%\",\r\n      backgroundColor: \"red\",\r\n      height: \"33rem\",\r\n      position: \"absolute\",\r\n      left: \"0\",\r\n      overflow: \"hidden\",\r\n    },\r\n    enter: {\r\n      transform: \"translate3d(0, -33em, 0)\",\r\n      opacity: 1,\r\n    },\r\n    leave: { transform: \"translate3d(0, 33rem, 0)\", opacity: 0 },\r\n  });\r\n\r\n  const ProjectDisplay = () => {\r\n    let gig = \"\";\r\n    props.data.map((item: any) => (gig = item.backgroundImg));\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          backgroundImage: `url(${gig})`,\r\n          backgroundSize: \"100vh 100%\",\r\n          backgroundRepeat: \"no-repeat\",\r\n        }}\r\n      >\r\n        <p\r\n          style={{\r\n            color: \"white\",\r\n            fontSize: \"120px\",\r\n            fontFamily: \"sans-serif\",\r\n            overflow: \"hidden\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {projectData.type}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ProjectContent = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"black\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            float: \"left\",\r\n            width: \"50%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"#000d2a\",\r\n          }}\r\n        >\r\n          <TechStack\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              marginTop: \"2.5rem\",\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            marginLeft: \"50%\",\r\n            height: \"100vh\",\r\n            opacity: \"60%\",\r\n          }}\r\n        >\r\n          <Code />\r\n        </div>\r\n        {projectData.icons.map((Icon: any, index: number) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: `${(0 + index) * 20}%`,\r\n              right: \"0\",\r\n              backgroundColor: \"black\",\r\n              padding: \"10px\",\r\n              paddingRight: `${100 / (index + 1 * 2)}%`,\r\n              borderTopLeftRadius: \"50px\",\r\n              borderBottomLeftRadius: \"50px\",\r\n              display: \"flex\",\r\n              boxShadow: \"-5px 2px 0px #004FFF\",\r\n            }}\r\n          >\r\n            <Icon.icon\r\n              size=\"3rem\"\r\n              style={{\r\n                fill: \"#000d2a\",\r\n                backgroundColor: \"#ff592e\",\r\n                borderRadius: \"50%\",\r\n                padding: \"5px\",\r\n                marginRight: \"10px\",\r\n              }}\r\n            />\r\n            <p\r\n              style={{\r\n                margin: \"auto\",\r\n                color: \"white\",\r\n                letterSpacing: \"1px\",\r\n              }}\r\n            >\r\n              {Icon.Framework}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <Col\r\n      xs={12}\r\n      sm={12}\r\n      md={6}\r\n      style={{\r\n        backgroundColor: \"black\",\r\n        height: \"33rem\",\r\n        left: \"0\",\r\n        border: \"1px solid black\",\r\n        margin: \"0\",\r\n        padding: \"0\",\r\n        // zIndex: 1,\r\n      }}\r\n    >\r\n      <ProjectDisplay />\r\n      {transition.map(\r\n        ({ item, key, props }) =>\r\n          item && (\r\n            <Col key={key} sm={12}>\r\n              <animated.div key={key} style={props}>\r\n                <ProjectContent />\r\n              </animated.div>\r\n            </Col>\r\n          )\r\n      )}\r\n      <Button\r\n        style={{\r\n          position: \"absolute\",\r\n          right: \"0\",\r\n          bottom: \"0\",\r\n          // zIndex: 1,\r\n          margin: \"10px\",\r\n          borderRadius: \"50%\",\r\n          width: \"2.7rem\",\r\n          height: \"2.7rem\",\r\n          backgroundColor: \"black\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          border: \"2px solid\",\r\n          borderColor: \"white\",\r\n        }}\r\n        onClick={() => toggle(!info)}\r\n      >\r\n        <div\r\n          style={{\r\n            right: \"0\",\r\n            bottom: \"0\",\r\n            borderRadius: \"50%\",\r\n            width: \"2rem\",\r\n            height: \"2rem\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          {/* TODO: Animate icons to fade in and out */}\r\n          {info ? <IoMdClose size=\"2rem\" /> : <IoMdArrowRoundUp size=\"2rem\" />}\r\n        </div>\r\n      </Button>\r\n    </Col>\r\n  );\r\n};\r\n","C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\index.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\icons\\index.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Assets\\vectors\\index.tsx",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\research.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\UIS.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\foodie.ts",[],"C:\\Users\\Victor\\repos\\webfolio\\src\\Data\\projects\\happiibook.ts",[],{"ruleId":"100","severity":1,"message":"101","line":4,"column":41,"nodeType":"102","messageId":"103","endLine":4,"endColumn":44,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":20},{"ruleId":"105","severity":1,"message":"109","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":37},{"ruleId":"105","severity":1,"message":"110","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":25},{"ruleId":"100","severity":1,"message":"101","line":8,"column":9,"nodeType":"102","messageId":"103","endLine":8,"endColumn":12,"suggestions":"111"},{"ruleId":"100","severity":1,"message":"101","line":16,"column":20,"nodeType":"102","messageId":"103","endLine":16,"endColumn":23,"suggestions":"112"},{"ruleId":"105","severity":1,"message":"113","line":17,"column":9,"nodeType":"107","messageId":"108","endLine":17,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":17,"column":41,"nodeType":"102","messageId":"103","endLine":17,"endColumn":44,"suggestions":"114"},{"ruleId":"100","severity":1,"message":"101","line":43,"column":27,"nodeType":"102","messageId":"103","endLine":43,"endColumn":30,"suggestions":"115"},{"ruleId":"100","severity":1,"message":"101","line":102,"column":39,"nodeType":"102","messageId":"103","endLine":102,"endColumn":42,"suggestions":"116"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["117","118"],"@typescript-eslint/no-unused-vars","'AiFillCode' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'ParallaxContext' is defined but never used.",["119","120"],["121","122"],"'project' is assigned a value but never used.",["123","124"],["125","126"],["127","128"],{"messageId":"129","fix":"130","desc":"131"},{"messageId":"132","fix":"133","desc":"134"},{"messageId":"129","fix":"135","desc":"131"},{"messageId":"132","fix":"136","desc":"134"},{"messageId":"129","fix":"137","desc":"131"},{"messageId":"132","fix":"138","desc":"134"},{"messageId":"129","fix":"139","desc":"131"},{"messageId":"132","fix":"140","desc":"134"},{"messageId":"129","fix":"141","desc":"131"},{"messageId":"132","fix":"142","desc":"134"},{"messageId":"129","fix":"143","desc":"131"},{"messageId":"132","fix":"144","desc":"134"},"suggestUnknown",{"range":"145","text":"146"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"145","text":"147"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"148","text":"146"},{"range":"148","text":"147"},{"range":"149","text":"146"},{"range":"149","text":"147"},{"range":"150","text":"146"},{"range":"150","text":"147"},{"range":"151","text":"146"},{"range":"151","text":"147"},{"range":"152","text":"146"},{"range":"152","text":"147"},[160,163],"unknown","never",[307,310],[475,478],[526,529],[1179,1182],[2516,2519]]